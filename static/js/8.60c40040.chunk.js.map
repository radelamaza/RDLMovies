{"version":3,"sources":["utils/url.js","utils/checkResponse.js","utils/get/getEpisodes.js","utils/get/getEpisode.js","utils/get/getPersonaje.js","utils/get/getPersonajes.js","utils/get/getQuotes.js","views/Profile/components/Header/Header.js","views/Profile/components/PersonajeInfo/PersonajeInfo.js","views/Profile/components/Appearance/Appearance.js","views/Profile/components/Quotes/Quotes.js","views/Profile/Profile.js"],"names":["URL","checkResponse","response","status","alert","window","location","replace","getEpisodes","tv","numero","a","console","log","fetch","method","headers","json","res","getEpisode","id","getPersonaje","name","getPersonajes","number","getQuotes","useStyles","makeStyles","theme","root","summaryButton","backgroundColor","palette","white","contacto","marginLeft","marginTop","width","cover","position","height","backgroundSize","backgroundRepeat","backgroundPosition","content","top","left","backgroundImage","visibility","changeButton","bottom","spacing","right","colors","blueGrey","color","breakpoints","down","addPhotoIcon","marginRight","div_derecha","padding","container","values","lg","maxWidth","margin","display","flexWrap","flexDirection","avatar","border","details","actions","pendingButton","red","personAddIcon","autoreporte","contenedor_martin","tipo_dolor","boton_autoreporte","Header","props","className","personaje","rest","classes","localStorage","getItem","clsx","alt","src","img","Typography","component","gutterBottom","variant","nickname","Divider","divider","alignItems","buttonIcon","PersonajeInfo","Card","CardHeader","title","CardContent","Table","TableBody","TableRow","selected","TableCell","style","fontWeight","portrayed","header","paddingBottom","paddingTop","grey","manageButton","Appearance","appearance","titleTypographyProps","List","map","app","ListItem","disableGutters","Link","RouterLink","to","ListItemText","primary","primaryTypographyProps","Quotes","quote","inner","info_contacto","info_tags","Profile","match","history","params","useState","usuario","setUsuario","booleano","setBooleano","quotes","setQuotes","Promise","all","React","useEffect","fetchData","Button","onClick","back","Grid","md","item","xl","xs","results","members","better_call_saul_appearance"],"mappings":"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","file":"static/js/8.60c40040.chunk.js","sourcesContent":["export const URL = 'https://tarea-1-breaking-bad.herokuapp.com/api';\n//'https://api-alivia-uc.tk'\n//'https://cimduc-app-api.herokuapp.com'\n","import useRouter from 'utils/useRouter';\nimport { useDispatch } from 'react-redux';\n\nexport function checkResponse(response) {\n    if (response.status==429) {\n        alert(\"Se ha excedido el numero maximo de consultas, intente nuevamente mas tarde\")\n        window.location.replace('/home')\n    } else { return true}\n  }\n  \n  export default checkResponse","import { URL } from '../url'\nimport { checkResponse} from \"../checkResponse\";\nexport async function getEpisodes(tv,numero) {\n    console.log('hola')\n    const response = await fetch(`${URL}/episodes?series=${tv}`, {\n        \n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        }\n    });\n    const res = await response.json();\n    console.log(res)\n    if (checkResponse(response)) {\n        return {response, res};\n        }\n\n\n    \n    \n    \n}","import { URL } from '../url'\nimport { checkResponse} from \"../checkResponse\";\nexport async function getEpisode(id) {\n    console.log('hola')\n    const response = await fetch(`${URL}/episodes/${id}`, {\n        \n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        }\n    });\n    const res = await response.json();\n    console.log(res)\n    if (checkResponse(response)) {\n        return {response, res};\n        }\n\n\n    \n    \n    \n}","import { URL } from '../url'\nimport { checkResponse} from \"../checkResponse\";\nexport async function getPersonaje(name) {\n    console.log('hola')\n    const response = await fetch(`${URL}/characters?name=${name}`, {\n        \n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        }\n    });\n    const res = await response.json();\n    console.log(res)\n    if (checkResponse(response)) {\n        return {response, res};\n        }\n\n\n    \n    \n    \n}","import { URL } from '../url'\nimport { checkResponse} from \"../checkResponse\";\nexport async function getPersonajes(name,number) {\n    console.log(number)\n    const response = await fetch(`${URL}/characters?offset=${number}&name=${name}`, {\n        \n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        }\n    });\n    const res = await response.json();\n    console.log(res)\n    if (checkResponse(response)) {\n        return {response, res};\n        }\n\n\n    \n    \n    \n}","import { URL } from '../url'\nimport { checkResponse} from \"../checkResponse\";\nexport async function getQuotes(name) {\n    console.log('hola')\n    const response = await fetch(`${URL}/quote?author=${name}`, {\n        \n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        }\n    });\n    const res = await response.json();\n    console.log(res)\n    if (checkResponse(response)) {\n        return {response, res};\n        }\n\n\n    \n    \n    \n}","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Typography,\n  Button,\n  colors,\n  Divider\n} from '@material-ui/core';\nimport ChatIcon from '@material-ui/icons/ChatOutlined';\nimport { useSelector } from 'react-redux';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  summaryButton: {\n    backgroundColor: theme.palette.white,\n    \n  },\n  contacto: {\n    marginLeft: '2%',\n    marginTop: '1%',\n    width: '30%',\n  },\n  cover: {\n    position: 'relative',\n    height: 360,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    '&:before': {\n      position: 'absolute',\n      content: '\" \"',\n      top: 0,\n      left: 0,\n      height: '100%',\n      width: '100%',\n      backgroundImage:\n        'linear-gradient(-180deg, rgba(0,0,0,0.00) 58%, rgba(0,0,0,0.32) 100%)'\n    },\n    '&:hover': {\n      '& $changeButton': {\n        visibility: 'visible'\n      }\n    }\n  },\n  changeButton: {\n    visibility: 'hidden',\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    right: theme.spacing(3),\n    backgroundColor: colors.blueGrey[900],\n    color: theme.palette.white,\n    [theme.breakpoints.down('md')]: {\n      top: theme.spacing(3),\n      bottom: 'auto'\n    },\n    '&:hover': {\n      backgroundColor: colors.blueGrey[900]\n    }\n  },\n  addPhotoIcon: {\n    marginRight: theme.spacing(1)\n  },\n  div_derecha: {\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(2, 3)\n  },\n  container: {\n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    padding: theme.spacing(2, 3),\n    margin: '0 auto',\n    position: 'relative',\n    display: 'flex',\n    marginTop: 120,\n    flexWrap: 'wrap',\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column'\n    }\n  },\n  avatar: {\n    border: `2px solid ${theme.palette.white}`,\n    height: 120,\n    width: 120,\n    top: -60,\n    left: theme.spacing(3),\n    position: 'absolute'\n  },\n  details: {\n    marginLeft: 136\n  },\n  actions: {\n    position: 'relative',\n    marginLeft: 'auto',\n    [theme.breakpoints.down('sm')]: {\n      marginTop: theme.spacing(1)\n    },\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  pendingButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.red[600],\n    '&:hover': {\n      backgroundColor: colors.red[900]\n    }\n  },\n  personAddIcon: {\n    marginRight: theme.spacing(1)\n  },\n  autoreporte: {\n    marginRight: theme.spacing(1),\n  },\n  contenedor_martin: {\n    display: 'inline-flex'\n  },\n  tipo_dolor: {\n    border: '1px',\n    marginLeft: 30,\n    marginRight: theme.spacing(3),\n    marginTop: 10,\n    width: 500,\n    height: 150\n  },\n  boton_autoreporte: {\n    marginRight: \"auto\",\n    marginTop: 0\n  }\n\n}));\n\n\nconst Header = props => {\n  const { className, personaje, ...rest } = props;\n  const classes = useStyles();\n  const role = localStorage.getItem('role');\n\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      \n      {}\n      <div className={classes.container}>\n        <img\n          alt=\"Person\"\n          className={classes.avatar}\n          src={personaje.img}\n        />\n        <div className={classes.details}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            {personaje.nickname}\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h4\"\n          >\n            {personaje.name}\n          </Typography>\n          \n        </div>\n        <div className={classes.div_derecha}>\n        </div>\n        {/* <div className={classes.actions}>\n          {button}\n          \n          <Button\n            className={classes.summaryButton}\n            edge=\"start\"\n            component={RouterLink}\n            variant=\"contained\"\n            to={\"/profile/\"+user.id+\"/dashboard\"}\n          >\n            <BarChartIcon className={classes.barChartIcon} />\n            Ver Estadisticas\n          </Button>\n        </div> */}\n      </div>\n      \n      <Divider className={classes.divider} />\n        {}\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Card,\n    CardHeader,\n    CardContent,\n    Divider,\n    Table,\n    TableBody,\n    TableRow,\n    TableCell,\n    Typography,\n} from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    content: {\n        padding: 0,\n    },\n    actions: {\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        '& > * + *': {\n            marginLeft: 0,\n        },\n    },\n    buttonIcon: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst PersonajeInfo = (props) => {\n    const { className, personaje, ...rest } = props;\n    const classes = useStyles();\n    \n\n    \n\n    \n\n    return (\n        <Card {...rest} className={clsx(classes.root, className)}>\n            <CardHeader title='Información' />\n            <Divider />\n            <CardContent className={classes.content}>\n                <Table>\n                    <TableBody>\n                        \n                        <TableRow selected>\n                            <TableCell>\n                                {' '}\n                                <Typography style={{ fontWeight: 'bold' }}>\n                                    {' '}\n                                    Estado\n                                </Typography>{' '}\n                            </TableCell>\n                            <TableCell>\n                                <div>{personaje.status}</div>\n                            </TableCell>\n                        </TableRow>\n                        <TableRow >\n                            <TableCell>\n                                <Typography style={{ fontWeight: 'bold' }}>\n                                    {' '}\n                                    Actor\n                                </Typography>\n                            </TableCell>\n                            <TableCell>\n                                {personaje.portrayed}\n                            </TableCell>\n                        </TableRow>\n                        \n                    </TableBody>\n                </Table>\n            </CardContent>\n        </Card>\n    );\n};\n\nPersonajeInfo.propTypes = {\n    className: PropTypes.string,\n    order: PropTypes.object.isRequired,\n};\n\nexport default PersonajeInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Avatar,\n  Button,\n  Card,\n  Link,\n  CardContent,\n  CardHeader,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  colors\n} from '@material-ui/core';\n\nimport getInitials from 'utils/getInitials';\nimport { RecentActorsSharp } from '@material-ui/icons';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  header: {\n    paddingBottom: 0\n  },\n  content: {\n    paddingTop: 0\n  },\n  actions: {\n    backgroundColor: colors.grey[50]\n  },\n  manageButton: {\n    width: '100%'\n  }\n}));\n\nconst Appearance = props => {\n  const { appearance, title, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        className={classes.header}\n        title={title}\n        titleTypographyProps={{\n          variant: 'overline'\n        }}\n      />\n      <CardContent className={classes.content}>\n        <List>\n          {appearance && appearance.map(app => (\n            <ListItem\n              disableGutters\n            >\n              <Link\n                              color=\"inherit\"\n                              component={RouterLink}\n                              to={\"/temporada/\"+title.replace(\" \",\"+\")+\"/\"+app+\"/\"}\n                              variant=\"h6\"\n                            >\n                            \n              \n              <ListItemText\n                primary={'Temporada '+app}\n                primaryTypographyProps={{ variant: 'h6' }}\n              />\n              </Link>\n            </ListItem>\n          ))}\n        </List>\n      </CardContent>\n    </Card>\n  );\n};\n\nAppearance.propTypes = {\n  className: PropTypes.string,\n  appearace: PropTypes.array.isRequired\n};\n\nexport default Appearance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Avatar,\n  Button,\n  Card,\n  Link,\n  CardContent,\n  CardHeader,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  colors\n} from '@material-ui/core';\n\nimport getInitials from 'utils/getInitials';\nimport { RecentActorsSharp } from '@material-ui/icons';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  header: {\n    paddingBottom: 0\n  },\n  content: {\n    paddingTop: 0\n  },\n  actions: {\n    backgroundColor: colors.grey[50]\n  },\n  manageButton: {\n    width: '100%'\n  }\n}));\n\nconst Quotes = props => {\n  const { appearance, title, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        className={classes.header}\n        title={title}\n        titleTypographyProps={{\n          variant: 'overline'\n        }}\n      />\n      <CardContent className={classes.content}>\n        <List>\n          {appearance && appearance.map(app => (\n            <ListItem\n              disableGutters\n            >\n                            \n              \n              <ListItemText\n                primary={app.quote}\n                primaryTypographyProps={{ variant: 'h6' }}\n              />\n            </ListItem>\n          ))}\n        </List>\n      </CardContent>\n    </Card>\n  );\n};\n\nQuotes.propTypes = {\n  className: PropTypes.string,\n  appearace: PropTypes.array.isRequired\n};\n\nexport default Quotes;\n","import React, {useState} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Page, SearchBar } from 'components';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tabs, Tab, Button, colors, Grid,CircularProgress } from '@material-ui/core';\nimport { Header, PersonajeInfo, Appearance, Quotes } from './components';\n\nimport { getPersonaje, getQuotes } from 'utils/get';\n\n\n\n\nconst user = {tags:[], profile:{speciality: \" \"}, cuestionarios:[], autoreportes:[]};\nconst handleSearch = () => {};\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3),\n    //minWidth: '400px',\n  },\n  inner: {\n    \n    width: theme.breakpoints.values.lg,\n    maxWidth: '100%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  },\n  info_contacto: { \n    marginLeft: '2%',\n    marginTop: '1%',\n    maxWidth: '600px',\n    \n    //minWidth: 500px;\n  },\n  contenedor_martin: {\n    display: 'flex'\n  },\n  info_tags: {\n    display: 'flex'\n  }\n}));\n\nconst Profile = props => {\n  const { match, history, className, ...rest } = props;\n  const classes = useStyles();\n  const { name} = match.params;\n  const [usuario, setUsuario] = useState([]);\n  const [booleano, setBooleano] = useState(false)\n  const [quotes, setQuotes] = useState([])\n  \n  async function fetchData() {\n    \n    const [ res, quotes] = await Promise.all([getPersonaje(name),getQuotes(name)])\n    console.log(res.res)\n    setUsuario(res.res[0]);\n    console.log(quotes.res)\n    setQuotes(quotes.res)\n    setBooleano(true);\n\n    return res\n  }\n  \n  React.useEffect(() => {\n    \n    if (!booleano){\n      fetchData()}\n  }, []);\n\n\n  const handleVolverAtras = () => {\n    window.history.back()\n  }\n  \n\n \n  \n\n\n  return (\n\n    \n    <Page\n      className={classes.root}\n      \n      title=\"Profile\"\n    >\n      <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={handleVolverAtras}\n          >\n            Volver Atrás\n          </Button> \n      \n      { usuario && (\n      <Header personaje={usuario}/>)}\n      <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      md={12}\n      container\n      spacing={3}\n    >\n      <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      md={8}\n      lg={8}\n      container\n      spacing={3}\n    >\n      \n      <Grid\n        item\n        lg={12}\n        md={6}\n        xl={9}\n        xs={12}\n      >\n      {usuario &&\n      <PersonajeInfo\n      className={classes.results}\n        personaje={usuario}\n      />}\n      </Grid>\n      <Grid\n        item\n        lg={12}\n        xl={3}\n        xs={12}\n      >{usuario &&\n        <Quotes\n          className={classes.members}\n          appearance={quotes}\n          title={'Frases Celebres'}\n        />}\n      </Grid>\n      </Grid>\n      <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      lg={4}\n      md={4}\n      spacing={3}\n    >\n\n      <Grid\n        item\n        lg={12}\n        xl={9}\n        xs={12}\n      >{usuario &&\n        <Appearance\n          className={classes.members}\n          appearance={usuario.better_call_saul_appearance}\n          title={'Better Call Saul'}\n        />}\n      </Grid>\n      <Grid\n        item\n        lg={12}\n        xl={3}\n        xs={12}\n      >{usuario &&\n        <Appearance\n          className={classes.members}\n          appearance={usuario.appearance}\n          title={'Breaking Bad'}\n        />}\n      </Grid>\n      </Grid>\n      </Grid>\n\n    </Page>\n  );\n};\n\nProfile.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default Profile;\n\n\n\n\n"],"sourceRoot":""}