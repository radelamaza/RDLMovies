{"version":3,"sources":["utils/url.js","utils/checkResponse.js","utils/get/getEpisodes.js","utils/get/getEpisode.js","utils/get/getPersonaje.js","utils/get/getPersonajes.js","utils/get/getQuotes.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","views/Temporada/components/Header/Header.js","views/Temporada/components/Results/Results.js","views/Temporada/Temporada.js"],"names":["URL","checkResponse","response","status","alert","window","location","replace","getEpisodes","tv","numero","a","console","log","fetch","method","headers","json","res","getEpisode","id","getPersonaje","name","getPersonajes","number","getQuotes","tablelvl2","variant","TableHead","React","props","ref","classes","className","_props$component","component","Component","other","_objectWithoutProperties","Tablelvl2Context","Provider","value","_extends","clsx","root","role","withStyles","display","makeStyles","useStyles","theme","content","padding","inner","minWidth","nameCell","alignItems","avatar","height","width","marginRight","spacing","actions","justifyContent","Results","episodes","title","rest","sepisodes","filter","e","season","Typography","color","gutterBottom","Card","CardHeader","Divider","CardContent","Table","TableRow","TableCell","align","TableBody","map","episode","hover","key","episode_id","Link","RouterLink","to","defaultProps","results","marginTop","Temporada","match","history","params","useState","booleano","setBooleano","setEpisodes","Promise","all","useEffect","fetchData","Button","onClick","back"],"mappings":"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","file":"static/js/7.b0b60e9a.chunk.js","sourcesContent":["export const URL = 'https://tarea-1-breaking-bad.herokuapp.com/api';\n//'https://api-alivia-uc.tk'\n//'https://cimduc-app-api.herokuapp.com'\n","import useRouter from 'utils/useRouter';\nimport { useDispatch } from 'react-redux';\n\nexport function checkResponse(response) {\n    if (response.status==429) {\n        alert(\"Se ha excedido el numero maximo de consultas, intente nuevamente mas tarde\")\n        window.location.replace('/home')\n    } else { return true}\n  }\n  \n  export default checkResponse","import { URL } from '../url'\nimport { checkResponse} from \"../checkResponse\";\nexport async function getEpisodes(tv,numero) {\n    console.log('hola')\n    const response = await fetch(`${URL}/episodes?series=${tv}`, {\n        \n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        }\n    });\n    const res = await response.json();\n    console.log(res)\n    if (checkResponse(response)) {\n        return {response, res};\n        }\n\n\n    \n    \n    \n}","import { URL } from '../url'\nimport { checkResponse} from \"../checkResponse\";\nexport async function getEpisode(id) {\n    console.log('hola')\n    const response = await fetch(`${URL}/episodes/${id}`, {\n        \n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        }\n    });\n    const res = await response.json();\n    console.log(res)\n    if (checkResponse(response)) {\n        return {response, res};\n        }\n\n\n    \n    \n    \n}","import { URL } from '../url'\nimport { checkResponse} from \"../checkResponse\";\nexport async function getPersonaje(name) {\n    console.log('hola')\n    const response = await fetch(`${URL}/characters?name=${name}`, {\n        \n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        }\n    });\n    const res = await response.json();\n    console.log(res)\n    if (checkResponse(response)) {\n        return {response, res};\n        }\n\n\n    \n    \n    \n}","import { URL } from '../url'\nimport { checkResponse} from \"../checkResponse\";\nexport async function getPersonajes(name,number) {\n    console.log(number)\n    const response = await fetch(`${URL}/characters?offset=${number}&name=${name}`, {\n        \n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        }\n    });\n    const res = await response.json();\n    console.log(res)\n    if (checkResponse(response)) {\n        return {response, res};\n        }\n\n\n    \n    \n    \n}","import { URL } from '../url'\nimport { checkResponse} from \"../checkResponse\";\nexport async function getQuotes(name) {\n    console.log('hola')\n    const response = await fetch(`${URL}/quote?author=${name}`, {\n        \n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        }\n    });\n    const res = await response.json();\n    console.log(res)\n    if (checkResponse(response)) {\n        return {response, res};\n        }\n\n\n    \n    \n    \n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = /*#__PURE__*/React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const handleVolverAtras = () => {\n    window.history.back()\n  }\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Customers\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={handleVolverAtras}\n          >\n            Volver Atrás\n          </Button> \n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  Button,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\n\nimport getInitials from 'utils/getInitials';\nimport { ReviewStars, GenericMoreButton, TableEditBar } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  },\n  nameCell: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, episodes,numero, title, ...rest } = props;\n  const sepisodes= episodes.filter(e => e.season==numero)\n  const classes = useStyles();\n\n\n\n \n\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        \n      </Typography>\n      <Card>\n        <CardHeader\n          title={title.replace('+',\" \")+\" Temporada \"+numero}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell align=\"center\">Episodios</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {\n                  sepisodes.map(episode => (\n                    <TableRow\n                      hover\n                      key={episode.episode_id}\n                    >\n                      \n                      <TableCell>\n                        <div className={classes.nameCell}>\n                          \n                          <div>\n                            <Link\n                              color=\"inherit\"\n                              component={RouterLink}\n                              to={\"/RDLMovies/episodio/\"+episode.episode_id+\"/\"}\n                              variant=\"h6\"\n                            >\n                              {\"E\"+episode.episode+\" \"+episode.title}\n                            </Link>\n                          </div>\n                        </div>\n                      </TableCell>\n                      \n                      \n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  episodes: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  episodes: []\n};\n\nexport default Results;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport { Page, SearchBar } from 'components';\nimport { Header, Results } from './components';\nimport { getEpisodes} from 'utils/get';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst Temporada = props => {\n  const { match, history } = props;\n  const classes = useStyles();\n  const { tv, numero } = match.params;\n  const [booleano, setBooleano] = useState(false);\n  const [episodes, setEpisodes] = useState([]);\n  async function fetchData() {\n    \n    const [episodes] = await Promise.all([getEpisodes(tv, numero)])\n    \n    setEpisodes(episodes.res)\n    console.log(episodes)\n    return episodes\n  }\n  const handleVolverAtras = () => {\n    window.history.back()\n  }\n  \n  React.useEffect(() => {\n    \n    if (!booleano){\n      fetchData()}\n      setBooleano(true)\n  }, []);\n  \n  const handleSearch = () => {};\n  return (\n    <Page\n      className={classes.root}\n      title={\"Temporada\"}\n    >\n      <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={handleVolverAtras}\n          >\n            Volver Atrás\n          </Button> \n       \n      {episodes && (\n        <Results\n          className={classes.results}\n          episodes={episodes}\n          title={tv}\n          numero={numero}\n        />\n      )}\n    </Page>\n  );\n};\nTemporada.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default Temporada;\n"],"sourceRoot":""}