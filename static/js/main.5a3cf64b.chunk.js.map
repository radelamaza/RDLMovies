{"version":3,"sources":["utils/axios.js","components/AddPost/AddPost.js","components/Alert/Alert.js","components/AuthGuard/AuthGuard.js","components/CodeBlock/CodeBlock.js","components/CookiesNotification/CookiesNotification.js","components/FilesDropzone/FilesDropzone.js","components/GenericMoreButton/GenericMoreButton.js","components/GoogleAnalytics/GoogleAnalytics.js","components/Label/Label.js","components/Markdown/Markdown.js","components/Navigation/components/NavigationListItem/NavigationListItem.js","components/Navigation/Navigation.js","utils/gradients.js","components/Page/Page.js","components/NotificationsPopover/components/NotificationList/NotificationList.js","components/NotificationsPopover/components/EmptyList/EmptyList.js","components/NotificationsPopover/NotificationsPopover.js","components/Paginate/Paginate.js","components/PostCard/components/CommentBubble/CommentBubble.js","components/PostCard/components/CommentForm/CommentForm.js","components/PostCard/components/Reactions/Reactions.js","components/PostCard/PostCard.js","components/PricingModal/PricingModal.js","components/ProjectCard/ProjectCard.js","components/ReviewStars/ReviewStars.js","components/RichEditor/components/EditorToolbar/EditorToolbar.js","components/RichEditor/utils/block.js","components/RichEditor/RichEditor.js","components/SearchBar/components/Filter/Filter.js","components/SearchBar/components/Search/Search.js","components/SearchBar/SearchBar.js","components/StackAvatars/StackAvatars.js","components/StatusBullet/StatusBullet.js","components/TableEditBar/TableEditBar.js","utils/getInitials.js","utils/useRouter.js","theme/palette.js","theme/typography.js","theme/overrides/MuiChip.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiInputBase.js","theme/overrides/MuiLinearProgress.js","theme/overrides/MuiListItemIcon.js","theme/overrides/MuiTableHead.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiCardActions.js","theme/overrides/MuiCardContent.js","theme/overrides/MuiCardHeader.js","theme/overrides/MuiOutlinedInput.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableRow.js","theme/overrides/MuiToggleButton.js","theme/overrides/MuiTypography.js","theme/index.js","reducers/sessionReducer.js","actions/sessionActions.js","reducers/index.js","layouts/Error/Error.js","layouts/Dashboard/components/TopBar/TopBar.js","layouts/Dashboard/Dashboard.js","routes.js","mixins/chartjs.js","mixins/moment.js","mixins/validate.js","utils/mock.js","mock/customerMock.js","App.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["instance","axios","create","makeStyles","theme","root","content","display","alignItems","paper","flexGrow","padding","spacing","input","width","divider","height","fileInput","useStyles","borderRadius","shape","default","backgroundColor","palette","primary","main","color","contrastText","success","colors","green","white","info","lightBlue","warning","orange","error","message","icon","fontSize","marginRight","action","marginLeft","paddingLeft","icons","Alert","forwardRef","props","ref","className","variant","onClose","rest","classes","Paper","clsx","component","Typography","elevation","IconButton","key","onClick","displayName","defaultProps","AuthGuard","roles","children","session","useSelector","state","router","useRouter","useEffect","loggedIn","user","includes","role","history","push","CodeBlock","async","source","language","Component","useRef","Prism","current","codeLines","split","trim","shift","length","pop","indexOfFirstChar","search","output","forEach","line","index","substr","trimCode","maxWidth","position","bottom","right","margin","outline","zIndex","media","textAlign","actions","justifyContent","dropZone","border","flexWrap","grey","opacity","cursor","dragActive","image","marginTop","list","maxHeight","memo","moreRef","useState","openMenu","setOpenMenu","Tooltip","title","size","Menu","anchorEl","anchorOrigin","vertical","horizontal","menu","open","transformOrigin","MenuItem","ListItemIcon","ListItemText","process","REACT_APP_GA_MEASUREMENT_ID","flexShrink","lineHeight","minWidth","whiteSpace","rounded","Label","style","rootClassName","finalStyle","typography","h1","marginBottom","h2","h3","h4","h5","h6","subtitle1","link","textDecoration","CustomRouterLink","item","paddingTop","paddingBottom","itemLeaf","button","blueGrey","textTransform","letterSpacing","buttonLeaf","fontWeight","fontWeightRegular","fontWeightMedium","expandIcon","label","active","indigo","NavigationListItem","href","depth","Icon","openProp","setOpen","ListItem","disableGutters","Button","Collapse","in","activeClassName","exact","to","NavigationList","pages","List","reduce","items","page","reduceChildRoutes","matchPath","location","pathname","path","Boolean","Navigation","buildGradient","start","end","blue","red","GA_MEASUREMENT_ID","listItem","background","avatarBlue","backgroundImage","gradients","avatarGreen","avatarOrange","avatarIndigo","arrowForwardIcon","backgroundPositionX","backgroundPositionY","backgroundRepeat","backgroundSize","Page","window","gtag","page_path","page_name","Helmet","listStyle","userSelect","activeLink","break","breakLink","disabled","next","nextLink","pageLink","text","secondary","previous","previousLink","Paginate","pageCount","pageRangeDisplayed","onPageChange","activeLinkClassName","breakClassName","breakLabel","breakLinkClassName","containerClassName","disabledClassName","marginPagesDisplayed","nextClassName","nextLabel","nextLinkClassName","pageClassName","pageLinkClassName","previousClassName","previousLabel","previousLinkClassName","subContainerClassName","bubble","header","time","likeButton","likedButton","shareButton","shareIcon","subheader","accessTimeIcon","mediaArea","backgroundPosition","product","overflow","transition","transitions","easing","sharp","duration","leavingScreen","transform","top","left","options","recommended","contact","startButton","description","tags","learnMoreButton","details","starIcon","starFilledIcon","amber","starBorderIcon","ReviewStars","value","starCount","starNodes","i","uuid","starNode","inner","activeButton","fade","FormatQuoteIcon","FormatListBulletedIcon","FormatListNumberedIcon","CodeIcon","FormatAlignLeftIcon","FormatAlignCenterIcon","FormatAlignRightIcon","FormatAlignJustifyIcon","FormatBoldIcon","FormatItalicIcon","FormatUnderlined","newBlockRenderMap","Map","unstyled","element","paragraph","DefaultDraftBlockRenderMap","merge","editorContainer","minHeight","body2","body1","fontFamily","textAlignLeft","textAlignCenter","textAlignRight","textAlignJustify","flexDirection","drawer","buttonIcon","contentSection","contentSectionHeader","contentSectionContent","formGroup","fieldGroup","field","addButton","minAmount","maxAmount","radioGroup","searchIcon","searchInput","searchButton","Search","onSearch","onChange","Input","disableUnderline","placeholder","flexBasis","filterButton","filterIcon","SearchBar","onFilter","Grid","container","avatar","more","StackAvatars","avatars","limit","avatarNodes","slice","map","Avatar","src","small","medium","large","StatusBullet","name","replace","v","toUpperCase","join","useContext","__RouterContext","black","dark","light","subtitle2","caption","overline","deletable","colorPrimary","MuiButton","contained","boxShadow","MuiCardActions","MuiCardContent","MuiCardHeader","MuiChip","MuiIconButton","MuiInputBase","MuiLinearProgress","MuiListItemIcon","MuiOutlinedInput","notchedOutline","borderColor","MuiPaper","elevation1","MuiTableHead","MuiTableCell","borderBottom","MuiTableRow","MuiToggleButton","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","MuiTypography","gutterBottom","createMuiTheme","overrides","initialState","first_name","last_name","email","bio","sessionReducer","type","rootReducer","combineReducers","Error","route","fallback","LinearProgress","renderRoutes","routes","shadowColor","shadowOffset","shadowOpacity","shadowRadius","searchPopper","appBar","searchPopperContent","trialButton","trialIcon","movieIcon","notificationsButton","notificationsBadge","logoutButton","logoutIcon","TopBar","onOpenNavBarMobile","useDispatch","searchValue","setSearchValue","AppBar","Toolbar","alt","Hidden","smDown","event","target","topBar","flex","navBar","overflowY","Dashboard","ErrorLayout","lazy","DashboardLayout","Chart","helpers","extend","elements","Rectangle","prototype","draw","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","beginPath","fillStyle","strokeStyle","lineWidth","corners","startCorner","indexOf","cornerAt","corner","moveTo","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","moment","updateLocale","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","yy","validate","validators","regex","RegExp","pattern","test","checked","AxiosMockAdapter","delayResponse","mock","onGet","reply","seasonsBCS","id","numero","tv","seasonsBB","summary","phone","country","zipCode","address1","address2","iban","autoCC","verified","currency","invoices","vat","balance","emails","created_at","subtract","date","paymentMethod","status","logs","method","desc","IP","createBrowserHistory","store","preloadedState","middlewares","thunkMiddleware","middlewareEnhancer","composeWithDevTools","applyMiddleware","enhancers","composedEnhancers","compose","createStore","configureStore","App","ThemeProvider","utils","MomentUtils","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a3cf64b.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create();\n\nexport default instance;\n","import React, { useState, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  Divider,\n  IconButton,\n  Input,\n  Paper,\n  Tooltip\n} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  paper: {\n    flexGrow: 1,\n    padding: theme.spacing(0.5, 2)\n  },\n  input: {\n    width: '100%'\n  },\n  divider: {\n    width: 1,\n    height: 24\n  },\n  fileInput: {\n    display: 'none'\n  }\n}));\n\nconst AddPost = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const fileInputRef = useRef(null);\n  const [value, setValue] = useState('');\n  const session = useSelector(state => state.session);\n\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent className={classes.content}>\n        <Paper\n          className={classes.paper}\n          elevation={1}\n        >\n          <Input\n            className={classes.input}\n            disableUnderline\n            onChange={handleChange}\n            placeholder={`What's on your mind, ${session.user.first_name}`}\n          />\n        </Paper>\n        <Tooltip title=\"Send\">\n          <IconButton color={value.length > 0 ? 'primary' : 'default'}>\n            <SendIcon />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <Tooltip title=\"Attach image\">\n          <IconButton\n            edge=\"end\"\n            onClick={handleAttach}\n          >\n            <AddPhotoIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Attach file\">\n          <IconButton\n            edge=\"end\"\n            onClick={handleAttach}\n          >\n            <AttachFileIcon />\n          </IconButton>\n        </Tooltip>\n        <input\n          className={classes.fileInput}\n          ref={fileInputRef}\n          type=\"file\"\n        />\n      </CardContent>\n    </Card>\n  );\n};\n\nAddPost.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AddPost;\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, IconButton, Typography, colors } from '@material-ui/core';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircleOutlined';\nimport CloseIcon from '@material-ui/icons/CloseOutlined';\nimport ErrorIcon from '@material-ui/icons/ErrorOutlined';\nimport InfoIcon from '@material-ui/icons/InfoOutlined';\nimport WarningIcon from '@material-ui/icons/WarningOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '6px 16px',\n    borderRadius: theme.shape.borderRadius\n  },\n  default: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText\n  },\n  success: {\n    backgroundColor: colors.green[600],\n    color: theme.palette.white\n  },\n  info: {\n    backgroundColor: colors.lightBlue[600],\n    color: theme.palette.white\n  },\n  warning: {\n    backgroundColor: colors.orange[900],\n    color: theme.palette.white\n  },\n  error: {\n    backgroundColor: theme.palette.error.main,\n    color: theme.palette.error.contrastText\n  },\n  message: {\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'center',\n    padding: '8px 0'\n  },\n  icon: {\n    fontSize: 20,\n    marginRight: theme.spacing(1)\n  },\n  action: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 'auto',\n    paddingLeft: 16,\n    marginRight: -8\n  }\n}));\n\nconst icons = {\n  default: <InfoIcon />,\n  success: <CheckCircleIcon />,\n  info: <InfoIcon />,\n  warning: <WarningIcon />,\n  error: <ErrorIcon />\n};\n\nconst Alert = forwardRef((props, ref) => {\n  const { className, icon, variant, message, onClose, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Paper\n      {...rest}\n      className={clsx(classes.root, classes[variant], className)}\n      component={Typography}\n      elevation={1}\n      ref={ref}\n      variant=\"h6\"\n    >\n      <span className={classes.icon}>{icon || icons[variant]}</span>\n      <div className={classes.message}>{message}</div>\n      {onClose && (\n        <IconButton\n          className={classes.action}\n          color=\"inherit\"\n          key=\"close\"\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      )}\n    </Paper>\n  );\n});\n\nAlert.displayName = 'Alert';\n\nAlert.propTypes = {\n  className: PropTypes.string,\n  icon: PropTypes.node,\n  message: PropTypes.string.isRequired,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['default', 'info', 'success', 'warning', 'error'])\n};\n\nAlert.defaultProps = {\n  variant: 'default'\n};\n\nexport default Alert;\n","import React, { Fragment, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport useRouter from 'utils/useRouter';\n\n// Example of user roles: ['GUEST', 'USER', 'ADMIN'];\n\nconst AuthGuard = props => {\n  const { roles, children } = props;\n\n  const session = useSelector(state => state.session);\n  const router = useRouter();\n\n  useEffect(() => {\n    if (!session.loggedIn || !session.user) {\n      router.history.push('/auth/login');\n      return;\n    }\n\n    if (!roles.includes(session.user.role)) {\n      router.history.push('/errors/error-401');\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [router]);\n\n  return <Fragment>{children}</Fragment>;\n};\n\nAuthGuard.propTypes = {\n  children: PropTypes.node,\n  roles: PropTypes.array.isRequired\n};\n\nAuthGuard.defaultProps = {\n  roles: []\n};\n\nexport default AuthGuard;\n","import React, { useEffect, useRef } from 'react';\nimport * as Prism from 'prismjs';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst trimCode = input => {\n  const codeLines = input.split('\\n');\n\n  if (!codeLines[0].trim()) {\n    codeLines.shift();\n  }\n\n  if (!codeLines[codeLines.length - 1].trim()) {\n    codeLines.pop();\n  }\n\n  const indexOfFirstChar = codeLines[0].search(/\\S|$/);\n\n  let output = '';\n\n  codeLines.forEach((line, index) => {\n    output = output + line.substr(indexOfFirstChar, line.length);\n\n    if (index !== codeLines.length - 1) {\n      output = output + '\\n';\n    }\n  });\n\n  return output;\n};\n\nconst CodeBlock = props => {\n  const {\n    async,\n    source,\n    language,\n    className,\n    component: Component,\n    ...rest\n  } = props;\n\n  const ref = useRef(null);\n  const classes = useStyles();\n\n  useEffect(() => {\n    const highlight = () => {\n      Prism.highlightElement(ref.current, async);\n    };\n\n    highlight();\n  });\n\n  return (\n    <pre className={`language-${language}`}>\n      <Component\n        {...rest}\n        className={clsx(classes.root, className)}\n        ref={ref}\n      >\n        {trimCode(source)}\n      </Component>\n    </pre>\n  );\n};\n\nCodeBlock.propTypes = {\n  async: PropTypes.bool,\n  className: PropTypes.string,\n  component: PropTypes.node,\n  language: PropTypes.string.isRequired,\n  source: PropTypes.string.isRequired\n};\n\nCodeBlock.defaultProps = {\n  component: 'code'\n};\n\nexport default CodeBlock;\n","import React, { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, Typography, Link, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 420,\n    position: 'fixed',\n    bottom: 0,\n    right: 0,\n    margin: theme.spacing(3),\n    outline: 'none',\n    zIndex: 2000\n  },\n  media: {\n    padding: theme.spacing(1, 2),\n    height: 180,\n    textAlign: 'center',\n    '& > img': {\n      height: '100%',\n      width: 'auto'\n    }\n  },\n  content: {\n    padding: theme.spacing(1, 2)\n  },\n  actions: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(1, 2, 2, 1)\n  }\n}));\n\nconst CookiesNotification = () => {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    const consent = Cookies.get('consent');\n\n    if (!consent) {\n      setOpen(true);\n    }\n  }, []);\n\n  const handleClose = () => {\n    Cookies.set('consent', 'true');\n    setOpen(false);\n  };\n\n  if (!open) {\n    return null;\n  }\n\n  return (\n    <Paper\n      className={classes.root}\n      elevation={3}\n    >\n      <div className={classes.media}>\n        <img\n          alt=\"Cookies\"\n          src=\"/images/undraw_cookie_love_ulvn.svg\"\n        />\n      </div>\n      <div className={classes.content}>\n        <Typography variant=\"body1\">\n          We use Cookies to ensure that we give you the best experience on our\n          website. Read our{' '}\n          <Link\n            className={classes.link}\n            component=\"a\"\n            href=\"https://devias.io/privacy-policy\"\n            target=\"_blank\"\n          >\n            Privacy Policy\n          </Link>\n          .\n        </Typography>\n      </div>\n      <div className={classes.actions}>\n        <Button\n          className={classes.agreeButton}\n          color=\"primary\"\n          onClick={handleClose}\n          variant=\"contained\"\n        >\n          I Agree\n        </Button>\n      </div>\n    </Paper>\n  );\n};\n\nexport default CookiesNotification;\n","import React, { Fragment, useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport uuid from 'uuid/v1';\nimport { useDropzone } from 'react-dropzone';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  IconButton,\n  Link,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n  Tooltip,\n  colors\n} from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nimport bytesToSize from 'utils/bytesToSize';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  dropZone: {\n    border: `1px dashed ${theme.palette.divider}`,\n    padding: theme.spacing(6),\n    outline: 'none',\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    '&:hover': {\n      backgroundColor: colors.grey[50],\n      opacity: 0.5,\n      cursor: 'pointer'\n    }\n  },\n  dragActive: {\n    backgroundColor: colors.grey[50],\n    opacity: 0.5\n  },\n  image: {\n    width: 130\n  },\n  info: {\n    marginTop: theme.spacing(1)\n  },\n  list: {\n    maxHeight: 320\n  },\n  actions: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'flex-end',\n    '& > * + *': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\nconst FilesDropzone = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [files, setFiles] = useState([]);\n\n  const handleDrop = useCallback(acceptedFiles => {\n    setFiles(files => [...files].concat(acceptedFiles));\n  }, []);\n\n  const handleRemoveAll = () => {\n    setFiles([]);\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: handleDrop\n  });\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div\n        className={clsx({\n          [classes.dropZone]: true,\n          [classes.dragActive]: isDragActive\n        })}\n        {...getRootProps()}\n      >\n        <input {...getInputProps()} />\n        <div>\n          <img\n            alt=\"Select file\"\n            className={classes.image}\n            src=\"/images/undraw_add_file2_gvbb.svg\"\n          />\n        </div>\n        <div>\n          <Typography\n            gutterBottom\n            variant=\"h3\"\n          >\n            Select files\n          </Typography>\n          <Typography\n            className={classes.info}\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n            Drop files here or click <Link underline=\"always\">browse</Link>{' '}\n            thorough your machine\n          </Typography>\n        </div>\n      </div>\n      {files.length > 0 && (\n        <Fragment>\n          <PerfectScrollbar options={{ suppressScrollX: true }}>\n            <List className={classes.list}>\n              {files.map((file, i) => (\n                <ListItem\n                  divider={i < files.length - 1}\n                  key={uuid()}\n                >\n                  <ListItemIcon>\n                    <FileCopyIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={file.name}\n                    primaryTypographyProps={{ variant: 'h5' }}\n                    secondary={bytesToSize(file.size)}\n                  />\n                  <Tooltip title=\"More options\">\n                    <IconButton edge=\"end\">\n                      <MoreIcon />\n                    </IconButton>\n                  </Tooltip>\n                </ListItem>\n              ))}\n            </List>\n          </PerfectScrollbar>\n          <div className={classes.actions}>\n            <Button\n              onClick={handleRemoveAll}\n              size=\"small\"\n            >\n              Remove all\n            </Button>\n            <Button\n              color=\"secondary\"\n              size=\"small\"\n              variant=\"contained\"\n            >\n              Upload files\n            </Button>\n          </div>\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nFilesDropzone.propTypes = {\n  className: PropTypes.string\n};\n\nexport default FilesDropzone;\n","import React, { Fragment, useRef, useState, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  IconButton,\n  Menu,\n  MenuItem\n} from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport PrintIcon from '@material-ui/icons/Print';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport AchiveIcon from '@material-ui/icons/ArchiveOutlined';\n\nconst useStyles = makeStyles(() => ({}));\n\nconst GenericMoreButton = props => {\n  const classes = useStyles();\n  const moreRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <Fragment>\n      <Tooltip title=\"More options\">\n        <IconButton\n          {...props}\n          onClick={handleMenuOpen}\n          ref={moreRef}\n          size=\"small\"\n        >\n          <MoreIcon />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        classes={{ paper: classes.menu }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <GetAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <FileCopyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy to clipboard\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <PictureAsPdfIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export as PDF\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <PrintIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Print\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <AchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Achive\" />\n        </MenuItem>\n      </Menu>\n    </Fragment>\n  );\n};\n\nGenericMoreButton.propTypes = {\n  className: PropTypes.string\n};\n\nexport default memo(GenericMoreButton);\n","/* eslint-disable react/no-danger */\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\n// eslint-disable-next-line no-undef\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst GoogleAnalytics = () => {\n  return (\n    <Helmet>\n      <script\n        async\n        src={`https://www.googletagmanager.com/gtag/js?id=${GA_MEASUREMENT_ID}`}\n      />\n      <script>\n        {`\n          window.dataLayer = window.dataLayer || [];\n\n          function gtag() {\n            dataLayer.push(arguments);\n          }\n\n          gtag('js', new Date());\n          gtag('config', '${GA_MEASUREMENT_ID}');\n        `}\n      </script>\n    </Helmet>\n  );\n};\n\nexport default GoogleAnalytics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Prism from 'prismjs';\nimport ReactMarkdown from 'react-markdown/with-html';\nimport { makeStyles } from '@material-ui/styles';\nimport { colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& h1': {\n      ...theme.typography.h1,\n      marginBottom: theme.spacing(1)\n    },\n    '& h2': {\n      ...theme.typography.h2,\n      marginBottom: theme.spacing(1)\n    },\n    '& h3': {\n      ...theme.typography.h3,\n      marginBottom: theme.spacing(1)\n    },\n    '& h4': {\n      ...theme.typography.h4,\n      marginBottom: theme.spacing(1)\n    },\n    '& h5': {\n      ...theme.typography.h5,\n      marginBottom: theme.spacing(1)\n    },\n    '& h6': {\n      ...theme.typography.h6,\n      marginBottom: theme.spacing(1)\n    },\n    '& p': {\n      ...theme.typography.subtitle1,\n      marginBottom: theme.spacing(2)\n    },\n    '& ul': {\n      marginLeft: theme.spacing(3),\n      marginBottom: theme.spacing(2)\n    },\n    '& ol': {\n      marginLeft: theme.spacing(3),\n      marginBottom: theme.spacing(2)\n    },\n    '& li': {\n      ...theme.typography.subtitle1,\n      marginBottom: theme.spacing(1)\n    },\n    '& hr': {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      backgroundColor: colors.grey[300],\n      border: 0,\n      height: 1\n    },\n    '& a': {\n      color: theme.palette.link,\n      '&:hover': {\n        textDecoration: 'underline'\n      }\n    }\n  }\n}));\n\nconst Markdown = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    Prism.highlightAll();\n  }, []);\n\n  return (\n    <div className={clsx(classes.root, className)}>\n      <ReactMarkdown {...rest} />\n    </div>\n  );\n};\n\nMarkdown.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Markdown;\n","/* eslint-disable react/display-name */\nimport React, { useState, forwardRef } from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { ListItem, Button, Collapse, colors } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\n\nconst CustomRouterLink = forwardRef((props, ref) => (\n  <div\n    ref={ref}\n    style={{ flexGrow: 1 }}\n  >\n    <RouterLink {...props} />\n  </div>\n));\n\nconst useStyles = makeStyles(theme => ({\n  item: {\n    display: 'block',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  itemLeaf: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: colors.blueGrey[800],\n    padding: '10px 8px',\n    justifyContent: 'flex-start',\n    textTransform: 'none',\n    letterSpacing: 0,\n    width: '100%'\n  },\n  buttonLeaf: {\n    color: colors.blueGrey[800],\n    padding: '10px 8px',\n    justifyContent: 'flex-start',\n    textTransform: 'none',\n    letterSpacing: 0,\n    width: '100%',\n    fontWeight: theme.typography.fontWeightRegular,\n    '&.depth-0': {\n      fontWeight: theme.typography.fontWeightMedium\n    }\n  },\n  icon: {\n    color: theme.palette.icon,\n    display: 'flex',\n    alignItems: 'center',\n    marginRight: theme.spacing(1)\n  },\n  expandIcon: {\n    marginLeft: 'auto',\n    height: 16,\n    width: 16\n  },\n  label: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 'auto'\n  },\n  active: {\n    color: colors.indigo[900],\n    fontWeight: theme.typography.fontWeightMedium,\n    '& $icon': {\n      color: colors.indigo[900]\n    }\n  }\n}));\n\nconst NavigationListItem = props => {\n  const {\n    title,\n    href,\n    depth,\n    children,\n    icon: Icon,\n    className,\n    open: openProp,\n    label: Label,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(openProp);\n\n  const handleToggle = () => {\n    setOpen(open => !open);\n  };\n\n  let paddingLeft = 8;\n\n  if (depth > 0) {\n    paddingLeft = 32 + 8 * depth;\n  }\n\n  const style = {\n    paddingLeft\n  };\n\n  if (children) {\n    return (\n      <ListItem\n        {...rest}\n        className={clsx(classes.item, className)}\n        disableGutters\n      >\n        <Button\n          className={classes.button}\n          onClick={handleToggle}\n          style={style}\n        >\n          {Icon && <Icon className={classes.icon} />}\n          {title}\n          {open ? (\n            <ExpandLessIcon\n              className={classes.expandIcon}\n              color=\"inherit\"\n            />\n          ) : (\n            <ExpandMoreIcon\n              className={classes.expandIcon}\n              color=\"inherit\"\n            />\n          )}\n        </Button>\n        <Collapse in={open}>{children}</Collapse>\n      </ListItem>\n    );\n  } else {\n    return (\n      <ListItem\n        {...rest}\n        className={clsx(classes.itemLeaf, className)}\n        disableGutters\n      >\n        <Button\n          activeClassName={classes.active}\n          className={clsx(classes.buttonLeaf, `depth-${depth}`)}\n          component={CustomRouterLink}\n          exact\n          style={style}\n          to={href}\n        >\n          {Icon && <Icon className={classes.icon} />}\n          {title}\n          {Label && (\n            <span className={classes.label}>\n              <Label />\n            </span>\n          )}\n        </Button>\n      </ListItem>\n    );\n  }\n};\n\nNavigationListItem.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  depth: PropTypes.number.isRequired,\n  href: PropTypes.string,\n  icon: PropTypes.any,\n  label: PropTypes.any,\n  open: PropTypes.bool,\n  title: PropTypes.string.isRequired\n};\n\nNavigationListItem.defaultProps = {\n  depth: 0,\n  open: false\n};\n\nexport default NavigationListItem;\n","/* eslint-disable react/no-multi-comp */\nimport React from 'react';\nimport { matchPath } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { List, Typography } from '@material-ui/core';\n\nimport useRouter from 'utils/useRouter';\nimport { NavigationListItem } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginBottom: theme.spacing(3)\n  }\n}));\n\nconst NavigationList = props => {\n  const { pages, ...rest } = props;\n\n  return (\n    <List>\n      {pages.reduce(\n        (items, page) => reduceChildRoutes({ items, page, ...rest }),\n        []\n      )}\n    </List>\n  );\n};\n\nNavigationList.propTypes = {\n  depth: PropTypes.number,\n  pages: PropTypes.array\n};\n\nconst reduceChildRoutes = props => {\n  const { router, items, page, depth } = props;\n\n  if (page.children) {\n    const open = matchPath(router.location.pathname, {\n      path: page.href,\n      exact: false\n    });\n\n    items.push(\n      <NavigationListItem\n        depth={depth}\n        icon={page.icon}\n        key={page.title}\n        label={page.label}\n        open={Boolean(open)}\n        title={page.title}\n      >\n        <NavigationList\n          depth={depth + 1}\n          pages={page.children}\n          router={router}\n        />\n      </NavigationListItem>\n    );\n  } else {\n    items.push(\n      <NavigationListItem\n        depth={depth}\n        href={page.href}\n        icon={page.icon}\n        key={page.title}\n        label={page.label}\n        title={page.title}\n      />\n    );\n  }\n\n  return items;\n};\n\nconst Navigation = props => {\n  const { title, pages, className, component: Component, ...rest } = props;\n\n  const classes = useStyles();\n  const router = useRouter();\n\n  return (\n    <Component\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {title && <Typography variant=\"overline\">{title}</Typography>}\n      <NavigationList\n        depth={0}\n        pages={pages}\n        router={router}\n      />\n    </Component>\n  );\n};\n\nNavigation.propTypes = {\n  className: PropTypes.string,\n  component: PropTypes.any,\n  pages: PropTypes.array.isRequired,\n  title: PropTypes.string\n};\n\nNavigation.defaultProps = {\n  component: 'nav'\n};\n\nexport default Navigation;\n","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","/* eslint-disable no-undef */\nimport React, { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nimport useRouter from 'utils/useRouter';\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst Page = props => {\n  const { title, children, ...rest } = props;\n\n  const router = useRouter();\n\n  useEffect(() => {\n    if (NODE_ENV !== 'production') {\n      return;\n    }\n\n    if (window.gtag) {\n      window.gtag('config', GA_MEASUREMENT_ID, {\n        page_path: router.location.pathname,\n        page_name: title\n      });\n    }\n  }, [title, router]);\n\n  return (\n    <div {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n};\n\nPage.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText\n} from '@material-ui/core';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\nimport CodeIcon from '@material-ui/icons/Code';\nimport StoreIcon from '@material-ui/icons/Store';\n\nimport gradients from 'utils/gradients';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  listItem: {\n    '&:hover': {\n      backgroundColor: theme.palette.background.default\n    }\n  },\n  avatarBlue: {\n    backgroundImage: gradients.blue\n  },\n  avatarGreen: {\n    backgroundImage: gradients.green\n  },\n  avatarOrange: {\n    backgroundImage: gradients.orange\n  },\n  avatarIndigo: {\n    backgroundImage: gradients.indigo\n  },\n  arrowForwardIcon: {\n    color: theme.palette.icon\n  }\n}));\n\nconst NotificationList = props => {\n  const { notifications, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const avatars = {\n    order: (\n      <Avatar className={classes.avatarBlue}>\n        <PaymentIcon />\n      </Avatar>\n    ),\n    user: (\n      <Avatar className={classes.avatarOrange}>\n        <PeopleIcon />\n      </Avatar>\n    ),\n    project: (\n      <Avatar className={classes.avatarGreen}>\n        <StoreIcon />\n      </Avatar>\n    ),\n    feature: (\n      <Avatar className={classes.avatarIndigo}>\n        <CodeIcon />\n      </Avatar>\n    )\n  };\n\n  return (\n    <List\n      {...rest}\n      className={clsx(classes.root, className)}\n      disablePadding\n    >\n      {notifications.map((notification, i) => (\n        <ListItem\n          className={classes.listItem}\n          component={RouterLink}\n          divider={i < notifications.length - 1}\n          key={notification.id}\n          to=\"#\"\n        >\n          <ListItemAvatar>{avatars[notification.type]}</ListItemAvatar>\n          <ListItemText\n            primary={notification.title}\n            primaryTypographyProps={{ variant: 'body1' }}\n            secondary={moment(notification.created_at).fromNow()}\n          />\n          <ArrowForwardIcon className={classes.arrowForwardIcon} />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nNotificationList.propTypes = {\n  className: PropTypes.string,\n  notifications: PropTypes.array.isRequired\n};\n\nexport default NotificationList;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    textAlign: 'center',\n    padding: theme.spacing(3)\n  },\n  image: {\n    height: 240,\n    backgroundImage: 'url(\"/images/undraw_empty_xct9.svg\")',\n    backgroundPositionX: 'right',\n    backgroundPositionY: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover'\n  }\n}));\n\nconst EmptyList = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.image} />\n      <Typography variant=\"h4\">There's nothing here...</Typography>\n    </div>\n  );\n};\n\nEmptyList.propTypes = {\n  className: PropTypes.string\n};\n\nexport default EmptyList;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Popover,\n  CardHeader,\n  CardActions,\n  Divider,\n  Button,\n  colors\n} from '@material-ui/core';\n\nimport { NotificationList, EmptyList } from './components';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: 350,\n    maxWidth: '100%'\n  },\n  actions: {\n    backgroundColor: colors.grey[50],\n    justifyContent: 'center'\n  }\n}));\n\nconst NotificationsPopover = props => {\n  const { notifications, anchorEl, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Popover\n      {...rest}\n      anchorEl={anchorEl}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center'\n      }}\n    >\n      <div className={classes.root}>\n        <CardHeader title=\"Notifications\" />\n        <Divider />\n        {notifications.length > 0 ? (\n          <NotificationList notifications={notifications} />\n        ) : (\n          <EmptyList />\n        )}\n        <Divider />\n        <CardActions className={classes.actions}>\n          <Button\n            component={RouterLink}\n            size=\"small\"\n            to=\"#\"\n          >\n            See all\n          </Button>\n        </CardActions>\n      </div>\n    </Popover>\n  );\n};\n\nNotificationsPopover.propTypes = {\n  anchorEl: PropTypes.any,\n  className: PropTypes.string,\n  notifications: PropTypes.array.isRequired,\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired\n};\n\nexport default NotificationsPopover;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { colors } from '@material-ui/core';\nimport ReactPaginate from 'react-paginate';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    ...theme.typography.button,\n    listStyle: 'none',\n    userSelect: 'none',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  active: {},\n  activeLink: {},\n  break: {},\n  breakLink: {},\n  disabled: {},\n  next: {\n    marginLeft: theme.spacing(1)\n  },\n  nextLink: {\n    padding: '6px 16px',\n    outline: 'none',\n    cursor: 'pointer',\n    borderRadius: 4,\n    '&:hover': {\n      backgroundColor: colors.blueGrey[50]\n    }\n  },\n  page: {},\n  pageLink: {\n    color: theme.palette.text.secondary,\n    padding: theme.spacing(1),\n    outline: 'none',\n    cursor: 'pointer',\n    width: 40,\n    height: 40,\n    borderRadius: '50%',\n    display: 'block',\n    textAlign: 'center',\n    '&:hover': {\n      backgroundColor: colors.blueGrey[50],\n      color: theme.palette.text.primary\n    },\n    '&$activeLink': {\n      backgroundColor: colors.blueGrey[50],\n      color: theme.palette.text.primary\n    }\n  },\n  previous: {\n    marginRight: theme.spacing(1)\n  },\n  previousLink: {\n    padding: '6px 16px',\n    outline: 'none',\n    cursor: 'pointer',\n    borderRadius: 4,\n    '&:hover': {\n      backgroundColor: colors.blueGrey[50]\n    }\n  }\n}));\n\nconst Paginate = props => {\n  const {\n    pageCount,\n    pageRangeDisplayed,\n    onPageChange,\n    className,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <ReactPaginate\n      activeClassName={classes.active}\n      activeLinkClassName={classes.activeLink}\n      breakClassName={classes.break}\n      breakLabel=\"...\"\n      breakLinkClassName={classes.breakLink}\n      containerClassName={clsx(classes.root, className)}\n      disabledClassName={classes.disabled}\n      marginPagesDisplayed={2}\n      nextClassName={classes.next}\n      nextLabel=\"next\"\n      nextLinkClassName={classes.nextLink}\n      onPageChange={onPageChange}\n      pageClassName={classes.page}\n      pageCount={pageCount}\n      pageLinkClassName={classes.pageLink}\n      pageRangeDisplayed={pageRangeDisplayed}\n      previousClassName={classes.previous}\n      previousLabel=\"previous\"\n      previousLinkClassName={classes.previousLink}\n      subContainerClassName=\"pages pagination\"\n      {...rest}\n    />\n  );\n};\n\nPaginate.propTypes = {\n  className: PropTypes.string,\n  onPageChange: PropTypes.func.isRequired,\n  pageCount: PropTypes.number.isRequired,\n  pageRangeDisplayed: PropTypes.number.isRequired\n};\n\nPaginate.defaultProps = {\n  onPageChange: () => {},\n  pageRangeDisplayed: 5\n};\n\nexport default Paginate;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Link, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    marginBottom: theme.spacing(2)\n  },\n  bubble: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: theme.palette.background.default\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  time: {\n    marginLeft: 'auto'\n  },\n  message: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nconst CommentBubble = props => {\n  const { comment, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Avatar\n        alt=\"Person\"\n        component={RouterLink}\n        src={comment.author.avatar}\n        to=\"/profile/1/timeline\"\n      />\n      <div className={classes.bubble}>\n        <div className={classes.header}>\n          <Link\n            color=\"textPrimary\"\n            component={RouterLink}\n            to=\"/profile/1/timeline\"\n            variant=\"h6\"\n          >\n            {comment.author.name}\n          </Link>\n          <Typography\n            className={classes.time}\n            variant=\"body2\"\n          >\n            {moment(comment.created_at).fromNow()}\n          </Typography>\n        </div>\n        <Typography\n          className={classes.message}\n          variant=\"body1\"\n        >\n          {comment.message}\n        </Typography>\n      </div>\n    </div>\n  );\n};\n\nCommentBubble.propTypes = {\n  className: PropTypes.string,\n  comment: PropTypes.object.isRequired\n};\n\nexport default CommentBubble;\n","import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Divider,\n  IconButton,\n  Input,\n  Paper,\n  Tooltip\n} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  paper: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(2),\n    padding: theme.spacing(0.5, 2)\n  },\n  input: {\n    width: '100%'\n  },\n  divider: {\n    width: 1,\n    height: 24\n  },\n  fileInput: {\n    display: 'none'\n  }\n}));\n\nconst CommentForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const fileInputRef = useRef(null);\n\n  const [value, setValue] = useState('');\n\n  const sender = {\n    avatar: '/images/avatars/avatar_11.png'\n  };\n\n  const handleChange = event => {\n    event.persist();\n\n    setValue(event.target.value);\n  };\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Avatar\n        alt=\"Person\"\n        src={sender.avatar}\n      />{' '}\n      <Paper\n        className={classes.paper}\n        elevation={1}\n      >\n        <Input\n          className={classes.input}\n          disableUnderline\n          onChange={handleChange}\n          placeholder=\"Leave a message\"\n        />\n      </Paper>\n      <Tooltip title=\"Send\">\n        <IconButton color={value.length > 0 ? 'primary' : 'default'}>\n          <SendIcon />\n        </IconButton>\n      </Tooltip>\n      <Divider className={classes.divider} />\n      <Tooltip title=\"Attach image\">\n        <IconButton\n          edge=\"end\"\n          onClick={handleAttach}\n        >\n          <AddPhotoIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Attach file\">\n        <IconButton\n          edge=\"end\"\n          onClick={handleAttach}\n        >\n          <AttachFileIcon />\n        </IconButton>\n      </Tooltip>\n      <input\n        className={classes.fileInput}\n        ref={fileInputRef}\n        type=\"file\"\n      />\n    </div>\n  );\n};\n\nCommentForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default CommentForm;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Typography,\n  Button,\n  IconButton,\n  Tooltip,\n  colors\n} from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport ShareIcon from '@material-ui/icons/Share';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  likeButton: {},\n  likedButton: {\n    color: colors.red[600]\n  },\n  shareButton: {\n    marginLeft: 'auto'\n  },\n  shareIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Reactions = props => {\n  const { post, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [liked, setLiked] = useState(post.liked);\n  const [likes, setLikes] = useState(post.likes);\n\n  const handleLike = () => {\n    setLiked(true);\n    setLikes(likes => likes + 1);\n  };\n\n  const handleUnlike = () => {\n    setLiked(false);\n    setLikes(likes => likes - 1);\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {liked ? (\n        <Tooltip title=\"Unlike\">\n          <IconButton\n            className={classes.likedButton}\n            onClick={handleUnlike}\n            size=\"small\"\n          >\n            <FavoriteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Like\">\n          <IconButton\n            className={classes.likeButton}\n            onClick={handleLike}\n            size=\"small\"\n          >\n            <FavoriteBorderIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n      <Typography\n        color=\"textSecondary\"\n        variant=\"h6\"\n      >\n        {likes}\n      </Typography>\n      <Button\n        className={classes.shareButton}\n        size=\"small\"\n        variant=\"contained\"\n      >\n        <ShareIcon className={classes.shareIcon} />\n        Share\n      </Button>\n    </div>\n  );\n};\n\nReactions.propTypes = {\n  className: PropTypes.string,\n  post: PropTypes.object.isRequired\n};\n\nexport default Reactions;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActionArea,\n  CardMedia,\n  Avatar,\n  Link,\n  Typography,\n  Divider\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\n\nimport { Reactions, CommentBubble, CommentForm } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  subheader: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  accessTimeIcon: {\n    color: theme.palette.text.secondary,\n    fontSize: '14px',\n    height: 14,\n    width: 14,\n    marginRight: 6\n  },\n  content: {\n    paddingTop: 0\n  },\n  message: {\n    marginBottom: theme.spacing(2)\n  },\n  mediaArea: {\n    marginBottom: theme.spacing(2)\n  },\n  media: {\n    height: 400,\n    backgroundPosition: 'initial'\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst PostCard = props => {\n  const { post, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        avatar={\n          <Avatar\n            alt=\"Person\"\n            className={classes.avatar}\n            component={RouterLink}\n            src={post.author.avatar}\n            to=\"/profile/1/timeline\"\n          />\n        }\n        disableTypography\n        subheader={\n          <div className={classes.subheader}>\n            <AccessTimeIcon className={classes.accessTimeIcon} />\n            <Typography variant=\"body2\">\n              {moment(post.created_at).fromNow()}\n            </Typography>\n          </div>\n        }\n        title={\n          <Link\n            color=\"textPrimary\"\n            component={RouterLink}\n            to=\"/profile/1/timeline\"\n            variant=\"h6\"\n          >\n            {post.author.name}\n          </Link>\n        }\n      />\n      <CardContent className={classes.content}>\n        <Typography\n          className={classes.message}\n          variant=\"body1\"\n        >\n          {post.message}\n        </Typography>\n        {post.media && (\n          <CardActionArea className={classes.mediaArea}>\n            <CardMedia\n              className={classes.media}\n              image={post.media}\n            />\n          </CardActionArea>\n        )}\n        <Reactions\n          className={classes.reactions}\n          post={post}\n        />\n        <Divider className={classes.divider} />\n        {post.comments && (\n          <div className={classes.comments}>\n            {post.comments.map(comment => (\n              <CommentBubble\n                comment={comment}\n                key={comment.id}\n              />\n            ))}\n          </div>\n        )}\n        <Divider className={classes.divider} />\n        <CommentForm />\n      </CardContent>\n    </Card>\n  );\n};\n\nPostCard.propTypes = {\n  className: PropTypes.string,\n  post: PropTypes.object.isRequired\n};\n\nexport default PostCard;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Dialog,\n  Divider,\n  Grid,\n  Link,\n  Paper,\n  Typography,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 960\n  },\n  header: {\n    maxWidth: 600,\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(5),\n    padding: theme.spacing(2),\n    maxWidth: 720,\n    margin: '0 auto'\n  },\n  product: {\n    overflow: 'unset',\n    position: 'relative',\n    padding: theme.spacing(5, 3),\n    cursor: 'pointer',\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    '&:hover': {\n      transform: 'scale(1.1)'\n    }\n  },\n  image: {\n    borderRadius: theme.shape.borderRadius,\n    position: 'absolute',\n    top: -24,\n    left: theme.spacing(3),\n    height: 48,\n    width: 48,\n    fontSize: 24\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  options: {\n    lineHeight: '26px'\n  },\n  recommended: {\n    backgroundColor: theme.palette.primary.main,\n    '& *': {\n      color: `${theme.palette.white} !important`\n    }\n  },\n  contact: {\n    margin: theme.spacing(3, 0)\n  },\n  actions: {\n    backgroundColor: colors.grey[100],\n    padding: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  startButton: {\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst PricingModal = props => {\n  const { open, onClose, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <div className={classes.header}>\n          <Typography\n            align=\"center\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            Start with Freelancer today. Boost up your services!\n          </Typography>\n          <Typography\n            align=\"center\"\n            className={classes.subtitle}\n            variant=\"subtitle2\"\n          >\n            Welcome to the first platform created for freelancers and agencies\n            for showcasing and finding the best clients in the market. 30% of\n            our income goes into Whale Charity\n          </Typography>\n        </div>\n        <div className={classes.content}>\n          <Grid\n            container\n            spacing={4}\n          >\n            <Grid\n              item\n              md={4}\n              xs={12}\n            >\n              <Paper\n                className={classes.product}\n                elevation={1}\n                onClick={onClose}\n              >\n                <img\n                  alt=\"Product\"\n                  className={classes.image}\n                  src=\"/images/products/product_freelancer.svg\"\n                />\n                <Typography\n                  component=\"h3\"\n                  gutterBottom\n                  variant=\"overline\"\n                >\n                  Freelancer\n                </Typography>\n                <div>\n                  <Typography\n                    component=\"span\"\n                    display=\"inline\"\n                    variant=\"h3\"\n                  >\n                    $5\n                  </Typography>\n                  <Typography\n                    component=\"span\"\n                    display=\"inline\"\n                    variant=\"subtitle2\"\n                  >\n                    /month\n                  </Typography>\n                </div>\n                <Typography variant=\"overline\">Max 1 user</Typography>\n                <Divider className={classes.divider} />\n                <Typography\n                  className={classes.options}\n                  variant=\"subtitle2\"\n                >\n                  <b>20</b> proposals/month <br />\n                  <b>10</b> templates <br />\n                  Analytics <b>dashboard</b> <br />\n                  <b>Email</b> alerts\n                </Typography>\n              </Paper>\n            </Grid>\n            <Grid\n              item\n              md={4}\n              xs={12}\n            >\n              <Paper\n                className={clsx(classes.product, classes.recommended)}\n                elevation={1}\n                onClick={onClose}\n              >\n                <img\n                  alt=\"Product\"\n                  className={classes.image}\n                  src=\"/images/products/product_agency--outlined.svg\"\n                />\n                <Typography\n                  component=\"h3\"\n                  gutterBottom\n                  variant=\"overline\"\n                >\n                  Agency\n                </Typography>\n                <div>\n                  <Typography\n                    component=\"span\"\n                    display=\"inline\"\n                    variant=\"h3\"\n                  >\n                    $29\n                  </Typography>\n                  <Typography\n                    component=\"span\"\n                    display=\"inline\"\n                    variant=\"subtitle2\"\n                  >\n                    /month\n                  </Typography>\n                </div>\n                <Typography variant=\"overline\">Max 3 user</Typography>\n                <Divider className={classes.divider} />\n                <Typography\n                  className={classes.options}\n                  variant=\"subtitle2\"\n                >\n                  <b>20</b> proposals/month <br />\n                  <b>10</b> templates <br />\n                  Analytics <b>dashboard</b> <br />\n                  <b>Email</b> alerts\n                </Typography>\n              </Paper>\n            </Grid>\n            <Grid\n              item\n              md={4}\n              xs={12}\n            >\n              <Paper\n                className={classes.product}\n                elevation={1}\n                onClick={onClose}\n              >\n                <img\n                  alt=\"Product\"\n                  className={classes.image}\n                  src=\"/images/products/product_enterprise.svg\"\n                />\n                <Typography\n                  component=\"h3\"\n                  gutterBottom\n                  variant=\"overline\"\n                >\n                  Enterprise\n                </Typography>\n                <div>\n                  <Typography\n                    component=\"span\"\n                    display=\"inline\"\n                    variant=\"h3\"\n                  >\n                    $259\n                  </Typography>\n                  <Typography\n                    component=\"span\"\n                    display=\"inline\"\n                    variant=\"subtitle2\"\n                  >\n                    /month\n                  </Typography>\n                </div>\n                <Typography variant=\"overline\">Unlimited</Typography>\n                <Divider className={classes.divider} />\n                <Typography\n                  className={classes.options}\n                  variant=\"subtitle2\"\n                >\n                  All from above <br />\n                  <b>Unlimited</b> 24/7 support <br />\n                  Personalised <b>Page</b> <br />\n                  <b>Advertise</b> your profile\n                </Typography>\n              </Paper>\n            </Grid>\n          </Grid>\n          <Typography\n            align=\"center\"\n            className={classes.contact}\n            variant=\"subtitle2\"\n          >\n            Have a larger team?{' '}\n            <Link\n              color=\"secondary\"\n              component={RouterLink}\n              to=\"#\"\n            >\n              Contact us\n            </Link>{' '}\n            for information about more enterprise options.\n          </Typography>\n        </div>\n        <div className={classes.actions}>\n          <Button\n            className={classes.startButton}\n            onClick={onClose}\n            variant=\"contained\"\n          >\n            Start with freelancer\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nPricingModal.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\n\nexport default PricingModal;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  IconButton,\n  Link,\n  Tooltip,\n  Typography,\n  colors\n} from '@material-ui/core';\nimport ShareIcon from '@material-ui/icons/Share';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\n\nimport getInitials from 'utils/getInitials';\nimport { Label } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  header: {\n    paddingBottom: 0\n  },\n  content: {\n    padding: 0,\n    '&:last-child': {\n      paddingBottom: 0\n    }\n  },\n  description: {\n    padding: theme.spacing(2, 3, 1, 3)\n  },\n  tags: {\n    padding: theme.spacing(0, 3, 1, 3),\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  learnMoreButton: {\n    marginLeft: theme.spacing(2)\n  },\n  likedButton: {\n    color: colors.red[600]\n  },\n  shareButton: {\n    marginLeft: theme.spacing(1)\n  },\n  details: {\n    padding: theme.spacing(1, 3)\n  }\n}));\n\nconst ProjectCard = props => {\n  const { project, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [liked, setLiked] = useState(project.liked);\n\n  const handleLike = () => {\n    setLiked(true);\n  };\n\n  const handleUnlike = () => {\n    setLiked(false);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        avatar={\n          <Avatar\n            alt=\"Author\"\n            src={project.author.avatar}\n          >\n            {getInitials(project.author.name)}\n          </Avatar>\n        }\n        className={classes.header}\n        disableTypography\n        subheader={\n          <Typography variant=\"body2\">\n            by{' '}\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to=\"/profile/1/timeline\"\n              variant=\"h6\"\n            >\n              {project.author.name}\n            </Link>{' '}\n            | Updated: {moment(project.updated_at).fromNow()}\n          </Typography>\n        }\n        title={\n          <Link\n            color=\"textPrimary\"\n            component={RouterLink}\n            to=\"/projects/1/overview\"\n            variant=\"h5\"\n          >\n            {project.title}\n          </Link>\n        }\n      />\n      <CardContent className={classes.content}>\n        <div className={classes.description}>\n          <Typography\n            colo=\"textSecondary\"\n            variant=\"subtitle2\"\n          >\n            We're looking for experienced Developers and Product Designers to\n            come aboard and help us build succesful businesses through softare.\n          </Typography>\n        </div>\n        <div className={classes.tags}>\n          {project.tags.map(tag => (\n            <Label\n              color={tag.color}\n              key={tag.text}\n            >\n              {tag.text}\n            </Label>\n          ))}\n        </div>\n        <Divider />\n        <div className={classes.details}>\n          <Grid\n            alignItems=\"center\"\n            container\n            justify=\"space-between\"\n            spacing={3}\n          >\n            <Grid item>\n              <Typography variant=\"h5\">${project.price}</Typography>\n              <Typography variant=\"body2\">Per Project</Typography>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"h5\">{project.location}</Typography>\n              <Typography variant=\"body2\">Location</Typography>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"h5\">{project.type}</Typography>\n              <Typography variant=\"body2\">Type</Typography>\n            </Grid>\n            <Grid item>\n              {liked ? (\n                <Tooltip title=\"Unlike\">\n                  <IconButton\n                    className={classes.likedButton}\n                    onClick={handleUnlike}\n                    size=\"small\"\n                  >\n                    <FavoriteIcon />\n                  </IconButton>\n                </Tooltip>\n              ) : (\n                <Tooltip title=\"Like\">\n                  <IconButton\n                    className={classes.likeButton}\n                    onClick={handleLike}\n                    size=\"small\"\n                  >\n                    <FavoriteBorderIcon />\n                  </IconButton>\n                </Tooltip>\n              )}\n              <Tooltip title=\"Share\">\n                <IconButton\n                  className={classes.shareButton}\n                  size=\"small\"\n                >\n                  <ShareIcon />\n                </IconButton>\n              </Tooltip>\n              <Button\n                className={classes.learnMoreButton}\n                component={RouterLink}\n                size=\"small\"\n                to=\"/projects/1/overview\"\n              >\n                Learn more\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nProjectCard.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\n\nexport default ProjectCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport uuid from 'uuid/v1';\nimport { makeStyles } from '@material-ui/styles';\nimport { colors } from '@material-ui/core';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center'\n  },\n  starIcon: {\n    fontSize: 18,\n    height: 18,\n    width: 18\n  },\n  starFilledIcon: {\n    color: colors.amber[400]\n  },\n  starBorderIcon: {\n    color: theme.palette.icon\n  }\n}));\n\nconst ReviewStars = props => {\n  const { value, starCount, className, ...rest } = props;\n\n  const classes = useStyles();\n  const starNodes = [];\n\n  for (let i = 1; i <= starCount; i++) {\n    const key = uuid();\n\n    const starNode =\n      i <= value ? (\n        <StarIcon\n          className={clsx(classes.starIcon, classes.starFilledIcon)}\n          key={key}\n        />\n      ) : (\n        <StarBorderIcon\n          className={clsx(classes.starIcon, classes.starBorderIcon)}\n          key={key}\n        />\n      );\n\n    starNodes.push(starNode);\n  }\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {starNodes}\n    </div>\n  );\n};\n\nReviewStars.propTypes = {\n  className: PropTypes.string,\n  starCount: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired\n};\n\nReviewStars.defaultProps = {\n  value: 0,\n  starCount: 5\n};\n\nexport default ReviewStars;\n","/* eslint-disable react/no-multi-comp */\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tooltip, Button } from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport CodeIcon from '@material-ui/icons/Code';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\nimport FormatUnderlined from '@material-ui/icons/FormatUnderlined';\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {},\n  inner: {\n    padding: theme.spacing(1),\n    display: 'flex',\n    alignItems: 'center'\n  }\n}));\n\nconst useStyles2 = makeStyles(theme => ({\n  button: {\n    padding: 0,\n    width: 32,\n    height: 32,\n    minWidth: 32,\n    color: theme.palette.icon,\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  activeButton: {\n    backgroundColor: fade(theme.palette.primary.main, 0.1),\n    color: theme.palette.primary.main\n  }\n}));\n\nconst BLOCK_TYPES = [\n  {\n    blockType: 'header-one',\n    tooltip: 'Heading 1',\n    text: 'H1'\n  },\n  {\n    blockType: 'header-two',\n    tooltip: 'Heading 2',\n    text: 'H2'\n  },\n  {\n    blockType: 'header-three',\n    tooltip: 'Heading 3',\n    text: 'H3'\n  },\n  {\n    blockType: 'header-four',\n    tooltip: 'Heading 4',\n    text: 'H4'\n  },\n  {\n    blockType: 'header-five',\n    tooltip: 'Heading 5',\n    text: 'H5'\n  },\n  {\n    blockType: 'header-six',\n    tooltip: 'Heading 6',\n    text: 'H6'\n  },\n  {\n    blockType: 'blockquote',\n    tooltip: 'Blockquote',\n    icon: FormatQuoteIcon\n  },\n  {\n    blockType: 'unordered-list-item',\n    tooltip: 'Unordered list',\n    icon: FormatListBulletedIcon\n  },\n  {\n    blockType: 'ordered-list-item',\n    tooltip: 'Ordered list',\n    icon: FormatListNumberedIcon\n  },\n  {\n    blockType: 'code-block',\n    tooltip: 'Code Block',\n    icon: CodeIcon\n  },\n  {\n    blockType: 'left',\n    tooltip: 'Align left',\n    icon: FormatAlignLeftIcon\n  },\n  {\n    blockType: 'center',\n    tooltip: 'Align center',\n    icon: FormatAlignCenterIcon\n  },\n  {\n    blockType: 'right',\n    tooltip: 'Align right',\n    icon: FormatAlignRightIcon\n  },\n  {\n    blockType: 'justify',\n    tooltip: 'Justify',\n    icon: FormatAlignJustifyIcon\n  }\n];\n\nconst INLINE_STYLES = [\n  {\n    inlineStyle: 'BOLD',\n    tooltip: 'Bold',\n    icon: FormatBoldIcon\n  },\n  {\n    inlineStyle: 'ITALIC',\n    tooltip: 'Italic',\n    icon: FormatItalicIcon\n  },\n  {\n    inlineStyle: 'UNDERLINE',\n    tooltip: 'Underline',\n    icon: FormatUnderlined\n  },\n  {\n    inlineStyle: 'CODE',\n    tooltip: 'Monospace',\n    icon: CodeIcon\n  }\n];\n\nconst ButtonBase = props => {\n  const { active, tooltip, children, ...rest } = props;\n\n  const classes = useStyles2();\n\n  return (\n    <Tooltip title={tooltip}>\n      <Button\n        {...rest}\n        className={clsx(classes.button, {\n          [classes.activeButton]: active\n        })}\n      >\n        {children}\n      </Button>\n    </Tooltip>\n  );\n};\n\nButtonBase.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n  tooltip: PropTypes.string\n};\n\nconst BlockTypeButtons = props => {\n  const { editorState, onToggle } = props;\n\n  const handleClick = (event, blockType) => {\n    event.preventDefault();\n\n    onToggle('blockType', blockType);\n  };\n\n  const selection = editorState.getSelection();\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType();\n  const blockData = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getData();\n\n  return (\n    <Fragment>\n      {BLOCK_TYPES.map(button => {\n        let active = false;\n\n        if (['left', 'center', 'right', 'justify'].includes(button.blockType)) {\n          active = blockData.get('text-align') === button.blockType;\n        } else {\n          active = button.blockType === blockType;\n        }\n\n        return (\n          <ButtonBase\n            active={active}\n            key={button.blockType}\n            onClick={event => handleClick(event, button.blockType)}\n            tooltip={button.tooltip}\n          >\n            {button.icon ? <button.icon /> : button.text}\n          </ButtonBase>\n        );\n      })}\n    </Fragment>\n  );\n};\n\nBlockTypeButtons.propTypes = {\n  editorState: PropTypes.any.isRequired,\n  onToggle: PropTypes.func\n};\n\nconst InlineStyleButtons = props => {\n  const { editorState, onToggle } = props;\n\n  const handleClick = (event, inlineStyle) => {\n    event.preventDefault();\n    onToggle('inlineStyle', inlineStyle);\n  };\n\n  const currentStyle = editorState.getCurrentInlineStyle();\n\n  return (\n    <Fragment>\n      {INLINE_STYLES.map(button => (\n        <ButtonBase\n          active={currentStyle.has(button.inlineStyle)}\n          key={button.inlineStyle}\n          onClick={event => handleClick(event, button.inlineStyle)}\n          tooltip={button.tooltip}\n        >\n          {button.icon ? <button.icon /> : button.text}\n        </ButtonBase>\n      ))}\n    </Fragment>\n  );\n};\n\nInlineStyleButtons.propTypes = {\n  editorState: PropTypes.any.isRequired,\n  onToggle: PropTypes.func\n};\n\nconst EditorToolbar = props => {\n  const { editorState, onToggle, className, ...rest } = props;\n\n  const classes = useStyles1();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <PerfectScrollbar>\n        <div className={classes.inner}>\n          <BlockTypeButtons\n            editorState={editorState}\n            onToggle={onToggle}\n          />\n          <InlineStyleButtons\n            editorState={editorState}\n            onToggle={onToggle}\n          />\n        </div>\n      </PerfectScrollbar>\n    </div>\n  );\n};\n\nEditorToolbar.propTypes = {\n  className: PropTypes.string,\n  editorState: PropTypes.any.isRequired,\n  onToggle: PropTypes.func\n};\n\nexport default EditorToolbar;\n","import { Map } from 'immutable';\nimport { EditorState, DefaultDraftBlockRenderMap, Modifier } from 'draft-js';\n\nexport function setBlockData(editorState, data) {\n  const newContentState = Modifier.setBlockData(\n    editorState.getCurrentContent(),\n    editorState.getSelection(),\n    data\n  );\n\n  return EditorState.push(editorState, newContentState, 'change-block-data');\n}\n\nconst newBlockRenderMap = Map({\n  unstyled: {\n    element: 'p'\n  },\n  paragraph: {\n    element: 'p'\n  }\n});\n\n// TODO:\n// 1. DraftJS uses 'div' tags inside every block.\n//    When we use 'p' tag for paragraphs, we get a warning because \"div\" tag cannot be inside a \"p\" tag.\n\nexport const blockRenderMap = DefaultDraftBlockRenderMap.merge(\n  newBlockRenderMap\n);\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Editor,\n  EditorState,\n  RichUtils,\n  Modifier,\n  getDefaultKeyBinding\n} from 'draft-js';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, Divider } from '@material-ui/core';\n\nimport { EditorToolbar } from './components';\nimport { blockRenderMap } from './utils';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  editorContainer: {\n    padding: theme.spacing(2),\n    minHeight: 400,\n    '& .public-DraftEditorPlaceholder-root': {\n      ...theme.typography.body2\n    },\n    '& .public-DraftEditorPlaceholder-hasFocus': {\n      display: 'none'\n    },\n    '& .public-DraftEditor-content': {\n      '& p': {\n        ...theme.typography.body1\n      },\n      '& h1': {\n        ...theme.typography.h1\n      },\n      '& h2': {\n        ...theme.typography.h2\n      },\n      '& h3': {\n        ...theme.typography.h3\n      },\n      '& h4': {\n        ...theme.typography.h4\n      },\n      '& h5': {\n        ...theme.typography.h5\n      },\n      '& h6': {\n        ...theme.typography.h6\n      },\n      '& blockquote': {\n        ...theme.typography.subtitle1\n      },\n      '& ul': {\n        ...theme.typography.body1,\n        marginLeft: theme.spacing(4)\n      },\n      '& ol': {\n        ...theme.typography.body1,\n        marginLeft: theme.spacing(4)\n      },\n      '& pre': {\n        backgroundColor: 'rgba(0, 0, 0, 0.05)',\n        fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n        fontSize: 16,\n        padding: 2\n      }\n    }\n  },\n  textAlignLeft: {\n    textAlign: 'left'\n  },\n  textAlignCenter: {\n    textAlign: 'center'\n  },\n  textAlignRight: {\n    textAlign: 'right'\n  },\n  textAlignJustify: {\n    textAlign: 'justify'\n  }\n}));\n\nconst capitalize = string => string.charAt(0).toUpperCase() + string.slice(1);\n\nconst RichEditor = props => {\n  const { placeholder, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const editorRef = useRef(null);\n\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n\n  const handleContainerClick = () => {\n    editorRef.current.focus();\n  };\n\n  const handleToolbarToggle = (type, value) => {\n    if (type === 'blockType') {\n      if (['left', 'center', 'right', 'justify'].includes(value)) {\n        const newContentState = Modifier.setBlockData(\n          editorState.getCurrentContent(),\n          editorState.getSelection(),\n          { 'text-align': value }\n        );\n\n        const newEditorState = EditorState.push(\n          editorState,\n          newContentState,\n          'change-block-data'\n        );\n\n        setEditorState(newEditorState);\n        return;\n      }\n\n      setEditorState(RichUtils.toggleBlockType(editorState, value));\n    } else {\n      setEditorState(RichUtils.toggleInlineStyle(editorState, value));\n    }\n  };\n\n  const handleEditorChange = editorState => {\n    setEditorState(editorState);\n  };\n\n  const handleKeyCommand = (command, editorState) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n\n    if (newState) {\n      handleEditorChange(newState);\n      return true;\n    }\n\n    return false;\n  };\n\n  const mapKeyToEditorCommand = event => {\n    if (event.keyCode === 9) {\n      const newEditorState = RichUtils.onTab(event, editorState, 4);\n\n      if (newEditorState !== editorState) {\n        handleEditorChange(newEditorState);\n      }\n\n      return;\n    }\n\n    return getDefaultKeyBinding(event);\n  };\n\n  function blockStyleFn(contentBlock) {\n    const textAlign = contentBlock.getData().get('text-align');\n\n    if (textAlign) {\n      const className = `textAlign${capitalize(textAlign)}`;\n\n      return classes[className];\n    }\n\n    return '';\n  }\n\n  return (\n    <Paper\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <EditorToolbar\n        editorState={editorState}\n        onToggle={handleToolbarToggle}\n      />\n      <Divider />\n      <div\n        className={classes.editorContainer}\n        onClick={handleContainerClick}\n      >\n        <Editor\n          blockRenderMap={blockRenderMap}\n          blockStyleFn={blockStyleFn}\n          editorState={editorState}\n          handleKeyCommand={handleKeyCommand}\n          keyBindingFn={mapKeyToEditorCommand}\n          onChange={handleEditorChange}\n          placeholder={placeholder}\n          ref={editorRef}\n          spellCheck\n        />\n      </div>\n    </Paper>\n  );\n};\n\nRichEditor.propTypes = {\n  className: PropTypes.string\n};\n\nexport default RichEditor;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Chip,\n  Collapse,\n  Divider,\n  Drawer,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Slider,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  drawer: {\n    width: 420,\n    maxWidth: '100%'\n  },\n  header: {\n    padding: theme.spacing(2, 1),\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  },\n  content: {\n    padding: theme.spacing(0, 3),\n    flexGrow: 1\n  },\n  contentSection: {\n    padding: theme.spacing(2, 0)\n  },\n  contentSectionHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    cursor: 'pointer'\n  },\n  contentSectionContent: {},\n  formGroup: {\n    padding: theme.spacing(2, 0)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  field: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  addButton: {\n    marginLeft: theme.spacing(1)\n  },\n  tags: {\n    marginTop: theme.spacing(1)\n  },\n  minAmount: {\n    marginRight: theme.spacing(3)\n  },\n  maxAmount: {\n    marginLeft: theme.spacing(3)\n  },\n  radioGroup: {},\n  actions: {\n    padding: theme.spacing(3),\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nconst Filter = props => {\n  const { open, onClose, onFilter, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const initialValues = {\n    paymentStatus: '',\n    tag: '',\n    tags: ['Full-Time'],\n    amount: [1, 7],\n    projectStatus: 'ended',\n    customerName: '',\n    customerType: 'freelancer',\n    customerEmail: '',\n    customerPhone: '',\n    customerAge: ''\n  };\n\n  const [expandProject, setExpandProject] = useState(true);\n  const [expandCustomer, setExpandCustomer] = useState(false);\n  const [values, setValues] = useState({ ...initialValues });\n\n  const handleClear = () => {\n    setValues({ ...initialValues });\n  };\n\n  const handleFieldChange = (event, field, value) => {\n    event.persist && event.persist();\n    setValues(values => ({\n      ...values,\n      [field]: value\n    }));\n  };\n\n  const handleTagAdd = () => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      if (newValues.tag && !newValues.tags.includes(newValues.tag)) {\n        newValues.tags = [...newValues.tags];\n        newValues.tags.push(newValues.tag);\n      }\n\n      newValues.tag = '';\n\n      return newValues;\n    });\n  };\n\n  const handleTagDelete = tag => {\n    setValues(values => {\n      const newValues = { ...values };\n\n      newValues.tags = newValues.tags.filter(t => t !== tag);\n\n      return newValues;\n    });\n  };\n\n  const handleToggleProject = () => {\n    setExpandProject(expandProject => !expandProject);\n  };\n\n  const handleToggleCustomer = () => {\n    setExpandCustomer(expandCustomer => !expandCustomer);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onFilter && onFilter(values);\n  };\n\n  const paymentStatusOptions = ['Pending', 'Canceled', 'Completed', 'Rejected'];\n  const customerAgeOption = ['18 - 30', '30 - 45', '50 - 60', '60+'];\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      classes={{ paper: classes.drawer }}\n      onClose={onClose}\n      open={open}\n      variant=\"temporary\"\n    >\n      <form\n        {...rest}\n        className={clsx(classes.root, className)}\n        onSubmit={handleSubmit}\n      >\n        <div className={classes.header}>\n          <Button\n            onClick={onClose}\n            size=\"small\"\n          >\n            <CloseIcon className={classes.buttonIcon} />\n            Close\n          </Button>\n        </div>\n        <div className={classes.content}>\n          <div className={classes.contentSection}>\n            <div\n              className={classes.contentSectionHeader}\n              onClick={handleToggleProject}\n            >\n              <Typography variant=\"h5\">Project</Typography>\n              {expandProject ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n            </div>\n            <Divider />\n            <Collapse in={expandProject}>\n              <div className={classes.contentSectionContent}>\n                <div className={classes.formGroup}>\n                  <TextField\n                    className={classes.field}\n                    fullWidth\n                    label=\"Payment status\"\n                    margin=\"dense\"\n                    name=\"paymentStatus\"\n                    onChange={event =>\n                      handleFieldChange(\n                        event,\n                        'paymentStatus',\n                        event.target.value\n                      )\n                    }\n                    select\n                    // eslint-disable-next-line react/jsx-sort-props\n                    SelectProps={{ native: true }}\n                    value={values.paymentStatus}\n                    variant=\"outlined\"\n                  >\n                    <option\n                      disabled\n                      value=\"\"\n                    />\n                    {paymentStatusOptions.map(option => (\n                      <option\n                        key={option}\n                        value={option}\n                      >\n                        {option}\n                      </option>\n                    ))}\n                  </TextField>\n                </div>\n                <div className={classes.formGroup}>\n                  <div className={classes.fieldGroup}>\n                    <TextField\n                      className={clsx(classes.field, classes.flexGrow)}\n                      label=\"Filter Tags\"\n                      margin=\"dense\"\n                      name=\"tag\"\n                      onChange={event =>\n                        handleFieldChange(event, 'tag', event.target.value)\n                      }\n                      value={values.tag}\n                      variant=\"outlined\"\n                    />\n                    <Button\n                      className={classes.addButton}\n                      onClick={handleTagAdd}\n                      size=\"small\"\n                    >\n                      <AddIcon className={classes.addIcon} />\n                      Add\n                    </Button>\n                  </div>\n                  <div className={classes.tags}>\n                    {values.tags.map(tag => (\n                      <Chip\n                        deleteIcon={<CloseIcon />}\n                        key={tag}\n                        label={tag}\n                        onDelete={() => handleTagDelete(tag)}\n                      />\n                    ))}\n                  </div>\n                </div>\n                <div className={classes.formGroup}>\n                  <Typography\n                    component=\"p\"\n                    gutterBottom\n                    variant=\"overline\"\n                  >\n                    Project amount\n                  </Typography>\n                  <div className={classes.fieldGroup}>\n                    <Typography\n                      className={classes.minAmount}\n                      variant=\"body1\"\n                    >\n                      ${values.amount[0]}K\n                    </Typography>\n                    <Slider\n                      className={classes.flexGrow}\n                      max={20}\n                      min={1}\n                      onChange={(event, value) =>\n                        handleFieldChange(event, 'amount', value)\n                      }\n                      value={values.amount}\n                      valueLabelDisplay=\"auto\"\n                    />\n                    <Typography\n                      className={classes.maxAmount}\n                      variant=\"body1\"\n                    >\n                      ${values.amount[1]}K\n                    </Typography>\n                  </div>\n                </div>\n                <div className={classes.formGroup}>\n                  <Typography\n                    component=\"p\"\n                    gutterBottom\n                    variant=\"overline\"\n                  >\n                    Project status\n                  </Typography>\n                  <div className={classes.fieldGroup}>\n                    <RadioGroup\n                      className={classes.radioGroup}\n                      name=\"projectStatus\"\n                      onChange={event =>\n                        handleFieldChange(\n                          event,\n                          'projectStatus',\n                          event.target.value\n                        )\n                      }\n                      value={values.projectStatus}\n                    >\n                      <FormControlLabel\n                        control={<Radio color=\"primary\" />}\n                        label=\"Ended\"\n                        value=\"ended\"\n                      />\n                      <FormControlLabel\n                        control={<Radio color=\"primary\" />}\n                        label=\"On-Going\"\n                        value=\"onGoing\"\n                      />\n                      <FormControlLabel\n                        control={<Radio color=\"primary\" />}\n                        label=\"In Review\"\n                        value=\"inReview\"\n                      />\n                      <FormControlLabel\n                        control={<Radio color=\"primary\" />}\n                        label=\"Competed\"\n                        value=\"completed\"\n                      />\n                    </RadioGroup>\n                  </div>\n                </div>\n              </div>\n            </Collapse>\n          </div>\n          <div className={classes.contentSection}>\n            <div\n              className={classes.contentSectionHeader}\n              onClick={handleToggleCustomer}\n            >\n              <Typography variant=\"h5\">Customer</Typography>\n              {expandCustomer ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n            </div>\n            <Divider />\n            <Collapse in={expandCustomer}>\n              <div className={classes.contentSectionContent}>\n                <div className={classes.contentSectionContent}>\n                  <div className={classes.formGroup}>\n                    <TextField\n                      className={classes.field}\n                      fullWidth\n                      label=\"Customer name\"\n                      margin=\"dense\"\n                      name=\"customerName\"\n                      onChange={event =>\n                        handleFieldChange(\n                          event,\n                          'customerName',\n                          event.target.value\n                        )\n                      }\n                      value={values.customerName}\n                      variant=\"outlined\"\n                    />\n                  </div>\n                  <div className={classes.formGroup}>\n                    <ToggleButtonGroup\n                      exclusive\n                      onChange={(event, value) =>\n                        value && handleFieldChange(event, 'customerType', value)\n                      }\n                      size=\"small\"\n                      value={values.customerType}\n                      variant=\"outlined\"\n                    >\n                      <ToggleButton\n                        color=\"primary\"\n                        value=\"projectOwner\"\n                      >\n                        Project owner\n                      </ToggleButton>\n                      <ToggleButton value=\"freelancer\">Freelancer</ToggleButton>\n                    </ToggleButtonGroup>\n                  </div>\n                  <div className={classes.formGroup}>\n                    <TextField\n                      className={classes.field}\n                      fullWidth\n                      label=\"Email address\"\n                      margin=\"dense\"\n                      name=\"customerEmail\"\n                      onChange={event =>\n                        handleFieldChange(\n                          event,\n                          'customerEmail',\n                          event.target.value\n                        )\n                      }\n                      value={values.customerEmail}\n                      variant=\"outlined\"\n                    />\n                  </div>\n                  <div className={classes.formGroup}>\n                    <TextField\n                      className={classes.field}\n                      fullWidth\n                      label=\"Phone number\"\n                      margin=\"dense\"\n                      name=\"customerPhone\"\n                      onChange={event =>\n                        handleFieldChange(\n                          event,\n                          'customerPhone',\n                          event.target.value\n                        )\n                      }\n                      value={values.customerPhone}\n                      variant=\"outlined\"\n                    />\n                  </div>\n                  <div className={classes.formGroup}>\n                    <TextField\n                      className={classes.field}\n                      fullWidth\n                      label=\"Age\"\n                      margin=\"dense\"\n                      name=\"customerAge\"\n                      onChange={event =>\n                        handleFieldChange(\n                          event,\n                          'customerAge',\n                          event.target.value\n                        )\n                      }\n                      select\n                      // eslint-disable-next-line react/jsx-sort-props\n                      SelectProps={{ native: true }}\n                      value={values.customerAge}\n                      variant=\"outlined\"\n                    >\n                      <option\n                        disabled\n                        value=\"\"\n                      />\n                      {customerAgeOption.map(option => (\n                        <option\n                          key={option}\n                          value={option}\n                        >\n                          {option}\n                        </option>\n                      ))}\n                    </TextField>\n                  </div>\n                </div>\n              </div>\n            </Collapse>\n          </div>\n        </div>\n        <div className={classes.actions}>\n          <Button\n            fullWidth\n            onClick={handleClear}\n            variant=\"contained\"\n          >\n            <DeleteIcon className={classes.buttonIcon} />\n            Clear\n          </Button>\n          <Button\n            color=\"primary\"\n            fullWidth\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Apply filters\n          </Button>\n        </div>\n      </form>\n    </Drawer>\n  );\n};\n\nFilter.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  onFilter: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Paper, Button, Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  search: {\n    flexGrow: 1,\n    height: 42,\n    padding: theme.spacing(0, 2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchIcon: {\n    marginRight: theme.spacing(2),\n    color: theme.palette.icon\n  },\n  searchInput: {\n    flexGrow: 1\n  },\n  searchButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst Search = props => {\n  const { onSearch, onChange, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Paper\n        className={classes.search}\n        elevation={1}\n      >\n        <SearchIcon className={classes.searchIcon} />\n        <Input\n          className={classes.searchInput}\n          disableUnderline\n          placeholder=\"Personajes\"\n          onChange={onChange}\n        />\n      </Paper>\n      <Button\n        className={classes.searchButton}\n        onClick={onSearch}\n        size=\"large\"\n        variant=\"contained\"\n      >\n        Buscar\n      </Button>\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  className: PropTypes.string,\n  onSearch: PropTypes.func\n};\n\nexport default Search;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Button } from '@material-ui/core';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nimport { Search, Filter } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n   \n    justifyContent: 'flex-end',\n    flexWrap: 'wrap'\n  },\n  search: {\n    flexGrow: 1,\n    maxWidth: 480,\n    flexBasis: 480\n  },\n  filterButton: {\n    marginLeft: 'auto'\n  },\n  filterIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst SearchBar = props => {\n  const { onFilter, onSearch, onChange, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openFilter, setOpenFilter] = useState(false);\n\n  const handleFilterOpen = () => {\n    setOpenFilter(true);\n  };\n\n  const handleFilterClose = () => {\n    setOpenFilter(false);\n  };\n\n  return (\n    <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n    >\n      <Grid item>\n        <Search\n          className={classes.search}\n          onSearch={onSearch}\n          onChange={onChange}\n        />\n      </Grid>\n      \n      \n    </Grid>\n  );\n};\n\nSearchBar.propTypes = {\n  className: PropTypes.string,\n  onFilter: PropTypes.func,\n  onSearch: PropTypes.func,\n  onChange: PropTypes.func,\n};\n\nexport default SearchBar;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport uuid from 'uuid/v1';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tooltip, Avatar } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    paddingLeft: 20\n  },\n  avatar: {\n    border: `3px solid ${theme.palette.white}`,\n    marginLeft: -20,\n    '&:hover': {\n      zIndex: 2\n    }\n  },\n  more: {\n    backgroundColor: theme.palette.error.main,\n    color: theme.palette.error.contrastText,\n    fontSize: 14,\n    fontWeight: theme.typography.fontWeightMedium\n  }\n}));\n\nconst StackAvatars = props => {\n  const { avatars, limit, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const avatarNodes = avatars.slice(0, limit).map(item => (\n    <Tooltip\n      key={uuid()}\n      title=\"View\"\n    >\n      <Avatar\n        className={classes.avatar}\n        src={item}\n      />\n    </Tooltip>\n  ));\n\n  if (avatars.length > limit) {\n    avatarNodes.push(\n      <Tooltip\n        key={uuid()}\n        title=\"View\"\n      >\n        <Avatar className={clsx(classes.avatar, classes.more)}>\n          +{avatars.length - limit}\n        </Avatar>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {avatarNodes}\n    </div>\n  );\n};\n\nStackAvatars.propTypes = {\n  avatars: PropTypes.array.isRequired,\n  className: PropTypes.string,\n  limit: PropTypes.number.isRequired\n};\n\nStackAvatars.defaultProps = {\n  limit: 3\n};\n\nexport default memo(StackAvatars);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-block',\n    borderRadius: '50%',\n    flexGrow: 0,\n    flexShrink: 0\n  },\n  small: {\n    height: theme.spacing(1),\n    width: theme.spacing(1)\n  },\n  medium: {\n    height: theme.spacing(2),\n    width: theme.spacing(2)\n  },\n  large: {\n    height: theme.spacing(3),\n    width: theme.spacing(3)\n  },\n  default: {\n    backgroundColor: colors.grey[50]\n  },\n  primary: {\n    backgroundColor: theme.palette.primary.main\n  },\n  info: {\n    backgroundColor: colors.lightBlue[600]\n  },\n  warning: {\n    backgroundColor: colors.orange[900]\n  },\n  error: {\n    backgroundColor: theme.palette.error.main\n  },\n  success: {\n    backgroundColor: colors.green[600]\n  }\n}));\n\nconst StatusBullet = props => {\n  const { className, size, color, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes[size]]: size,\n      [classes[color]]: color\n    },\n    className\n  );\n\n  return (\n    <span\n      {...rest}\n      className={rootClassName}\n      //\n    />\n  );\n};\n\nStatusBullet.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    'default',\n    'primary',\n    'info',\n    'success',\n    'warning',\n    'error'\n  ]),\n  size: PropTypes.oneOf(['small', 'medium', 'large'])\n};\n\nStatusBullet.defaultProps = {\n  size: 'medium',\n  color: 'default'\n};\n\nexport default StatusBullet;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Drawer, Grid, Typography, Button, Hidden } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/DeleteOutline';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  },\n  actions: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    '& > * + *': {\n      marginLeft: theme.spacing(2)\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TableEditBar = props => {\n  const {\n    selected,\n    className,\n    onMarkPaid,\n    onMarkUnpaid,\n    onDelete,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n  const open = selected.length > 0;\n\n  return (\n    <Drawer\n      anchor=\"bottom\"\n      open={open}\n      // eslint-disable-next-line react/jsx-sort-props\n      PaperProps={{ elevation: 1 }}\n      variant=\"persistent\"\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <Grid\n          alignItems=\"center\"\n          container\n          spacing={2}\n        >\n          <Hidden smDown>\n            <Grid\n              item\n              md={3}\n            >\n              <Typography\n                color=\"textSecondary\"\n                variant=\"subtitle1\"\n              >\n                {selected.length} selected\n              </Typography>\n            </Grid>\n          </Hidden>\n          <Grid\n            item\n            md={6}\n            xs={12}\n          >\n            <div className={classes.actions}>\n              <Button onClick={onMarkPaid}>\n                <CheckIcon className={classes.buttonIcon} />\n                Mark Paid\n              </Button>\n              <Button onClick={onMarkUnpaid}>\n                <CloseIcon className={classes.buttonIcon} />\n                Mark Unpaid\n              </Button>\n              <Button onClick={onDelete}>\n                <DeleteIcon className={classes.buttonIcon} />\n                Delete\n              </Button>\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    </Drawer>\n  );\n};\n\nTableEditBar.propTypes = {\n  className: PropTypes.string,\n  onDelete: PropTypes.func,\n  onMarkPaid: PropTypes.func,\n  onMarkUnpaid: PropTypes.func,\n  selected: PropTypes.array.isRequired\n};\n\nexport default TableEditBar;\n","export default (name = '') =>\n  name\n    .replace(/\\s+/, ' ')\n    .split(' ')\n    .slice(0, 2)\n    .map(v => v && v[0].toUpperCase())\n    .join('');\n","import { useContext } from 'react';\nimport { __RouterContext } from 'react-router';\n\nexport default () => useContext(__RouterContext);\n","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  primary: {\n    contrastText: black,\n    dark: colors.indigo[900],\n    main: white,\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  link: colors.blue[800],\n  icon: colors.blueGrey[600],\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.blueGrey[50],\n    color: colors.blueGrey[900]\n  },\n  deletable: {\n    '&:focus': {\n      backgroundColor: colors.blueGrey[100]\n    }\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {},\n  input: {\n    '&::placeholder': {\n      opacity: 1,\n      color: palette.text.secondary\n    }\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    borderRadius: 3,\n    overflow: 'hidden'\n  },\n  colorPrimary: {\n    backgroundColor: colors.blueGrey[50]\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    minWidth: 32\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiCardActions from './MuiCardActions';\nimport MuiCardContent from './MuiCardContent';\nimport MuiCardHeader from './MuiCardHeader';\nimport MuiChip from './MuiChip';\nimport MuiIconButton from './MuiIconButton';\nimport MuiInputBase from './MuiInputBase';\nimport MuiLinearProgress from './MuiLinearProgress';\nimport MuiListItemIcon from './MuiListItemIcon';\nimport MuiOutlinedInput from './MuiOutlinedInput';\nimport MuiPaper from './MuiPaper';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableRow from './MuiTableRow';\nimport MuiToggleButton from './MuiToggleButton';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiCardActions,\n  MuiCardContent,\n  MuiCardHeader,\n  MuiChip,\n  MuiIconButton,\n  MuiInputBase,\n  MuiLinearProgress,\n  MuiListItemIcon,\n  MuiOutlinedInput,\n  MuiPaper,\n  MuiTableHead,\n  MuiTableCell,\n  MuiTableRow,\n  MuiToggleButton,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","export default {\n  root: {\n    padding: '16px 24px'\n  }\n};\n","export default {\n  root: {\n    padding: 24\n  }\n};\n","export default {\n  root: {\n    padding: '16px 24px'\n  }\n};\n","export default {\n  root: {},\n  notchedOutline: {\n    borderColor: 'rgba(0,0,0,0.15)'\n  }\n};\n","export default {\n  root: {},\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    '&$selected': {\n      backgroundColor: palette.background.default\n    },\n    '&$hover': {\n      '&:hover': {\n        backgroundColor: palette.background.default\n      }\n    }\n  }\n};\n","import { colors } from '@material-ui/core';\n\nimport palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: colors.grey[100]\n    },\n    '&$selected': {\n      backgroundColor: colors.grey[50],\n      color: palette.primary.main,\n      '&:hover': {\n        backgroundColor: colors.grey[100]\n      }\n    },\n    '&:first-child': {\n      borderTopLeftRadius: 4,\n      borderBottomLeftRadius: 4\n    },\n    '&:last-child': {\n      borderTopRightRadius: 4,\n      borderBottomRightRadius: 4\n    }\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides\n});\n\nexport default theme;\n","import * as actionTypes from 'actions';\n\nconst initialState = {\n  loggedIn: true,\n  user: {\n    first_name: 'Shen',\n    last_name: 'Zhi',\n    email: 'demo@devias.io',\n    avatar: '/images/avatars/avatar_11.png',\n    bio: 'Brain Director',\n    role: 'ADMIN' // ['GUEST', 'USER', 'ADMIN']\n  }\n};\n\nconst sessionReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SESSION_LOGIN: {\n      return {\n        ...initialState\n      };\n    }\n\n    case actionTypes.SESSION_LOGOUT: {\n      return {\n        ...state,\n        loggedIn: false,\n        user: {\n          role: 'GUEST'\n        }\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default sessionReducer;\n","export const SESSION_LOGIN = 'SESSION_LOGIN';\nexport const SESSION_LOGOUT = 'SESSION_LOGOUT';\n\nexport const login = () => dispatch =>\n  dispatch({\n    type: SESSION_LOGIN\n  });\n\nexport const logout = () => dispatch =>\n  dispatch({\n    type: SESSION_LOGOUT\n  });\n","import { combineReducers } from 'redux';\n\nimport sessionReducer from './sessionReducer';\n\nconst rootReducer = combineReducers({\n  session: sessionReducer\n});\n\nexport default rootReducer;\n","import React, { Suspense } from 'react';\nimport { renderRoutes } from 'react-router-config';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { LinearProgress } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst Error = props => {\n  const { route } = props;\n\n  const classes = useStyles();\n\n  return (\n    <main className={classes.root}>\n      <Suspense fallback={<LinearProgress />}>\n        {renderRoutes(route.routes)}\n      </Suspense>\n    </main>\n  );\n};\n\nError.propTypes = {\n  route: PropTypes.object\n};\n\nexport default Error;\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport { SearchBar } from 'components';\nimport { Redirect } from 'react-router-dom';\nimport {\n  AppBar,\n  Badge,\n  Button,\n  IconButton,\n  Toolbar,\n  Hidden,\n  Input,\n  colors,\n  Popper,\n  Paper,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ClickAwayListener\n} from '@material-ui/core';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport axios from 'utils/axios';\nimport useRouter from 'utils/useRouter';\nimport { logout } from 'actions';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    boxShadow: {\n      shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.8,\n    shadowRadius: 1, \n    }\n  },\n  flexGrow: {\n    flexGrow: 1,\n    \n  },\n  search: {\n    backgroundColor: 'rgba(255,255,255, 0.1)',\n    borderRadius: 4,\n\n    justifyContent: 'flex-end',\n    flexBasis: 300,\n    height: 36,\n    padding: theme.spacing(0, 2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchIcon: {\n    marginRight: theme.spacing(2),\n    color: 'inherit'\n  },\n  searchInput: {\n\n    justifyContent: 'flex-end',\n    flexGrow: 1,\n    color: 'inherit',\n    '& input::placeholder': {\n      opacity: 1,\n      color: 'inherit'\n    }\n  },\n  searchPopper: {\n    zIndex: theme.zIndex.appBar + 100\n  },\n  searchPopperContent: {\n    marginTop: theme.spacing(1)\n  },\n  trialButton: {\n    marginLeft: theme.spacing(2),\n    color: theme.palette.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  },\n  trialIcon: {\n    marginRight: theme.spacing(1),\n  },\n  movieIcon: {\n    marginRight: theme.spacing(1),\n    height: 50,\n  },\n  notificationsButton: {\n    marginLeft: theme.spacing(1)\n  },\n  notificationsBadge: {\n    backgroundColor: colors.orange[600]\n  },\n  logoutButton: {\n    marginLeft: theme.spacing(1),\n    justifyContent: 'flex-end',\n    flexDirection: 'row'\n\n  },\n  logoutIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TopBar = props => {\n  const { onOpenNavBarMobile, className, ...rest } = props;\n\n  const classes = useStyles();\n  const { history } = useRouter();\n  const searchRef = useRef(null);\n  const dispatch = useDispatch();\n  const notificationsRef = useRef(null);\n  const [pricingModalOpen, setPricingModalOpen] = useState(false);\n  const [openSearchPopover, setOpenSearchPopover] = useState(false);\n  const [searchValue, setSearchValue] = useState('');\n  const [notifications, setNotifications] = useState([]);\n  const [openNotifications, setOpenNotifications] = useState(false);\n\n  \n  \n  const handleSearch = () => {\n    window.location.replace(`/busqueda/${searchValue.replace(' ','+')}/`)\n  };\n  const handleChange = (event) => {\n    setSearchValue(event.target.value);\n};\n\n  return (\n    <AppBar\n      {...rest}\n      className={clsx(classes.root, className)}\n      color=\"primary\"\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <img className={classes.movieIcon}\n            alt=\"Logo\"\n            src=\"/images/logos/movielogo1.png\"\n            \n          />\n        </RouterLink>\n        <div className={classes.flexGrow} />\n        \n      <Hidden smDown>\n      <SearchBar\n        variant=\"contained\"\n        onSearch={handleSearch}\n        onChange={handleChange}\n      />\n          </Hidden>\n        \n      </Toolbar>\n      \n      \n      \n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onOpenNavBarMobile: PropTypes.func\n};\n\nexport default TopBar;\n","import React, { Suspense, useState } from 'react';\nimport { renderRoutes } from 'react-router-config';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { LinearProgress } from '@material-ui/core';\n\nimport { TopBar } from './components';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  topBar: {\n    zIndex: 2,\n    position: 'relative'\n  },\n  container: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  navBar: {\n    zIndex: 3,\n    width: 256,\n    minWidth: 256,\n    flex: '0 0 auto'\n  },\n  content: {\n    overflowY: 'auto',\n    flex: '1 1 auto'\n  }\n}));\n\nconst Dashboard = props => {\n  const { route } = props;\n\n  const classes = useStyles();\n\n\n\n  return (\n    <div className={classes.root}>\n      <TopBar\n        className={classes.topBar}\n      />\n      <div className={classes.container}>\n        \n        <main className={classes.content}>\n          <Suspense fallback={<LinearProgress />}>\n            {renderRoutes(route.routes)}\n          </Suspense>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nDashboard.propTypes = {\n  route: PropTypes.object\n};\n\nexport default Dashboard;\n","/* eslint-disable react/no-multi-comp */\n/* eslint-disable react/display-name */\nimport React, { lazy } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport ErrorLayout from './layouts/Error';\nimport DashboardLayout from './layouts/Dashboard';\n\nconst routes = [\n  {\n    path: '/',\n    exact: true,\n    component: () => <Redirect to=\"/home\" />\n  },\n  {\n    path: '/errors',\n    component: ErrorLayout,\n    routes: [\n      {\n        path: '/errors/error-401',\n        exact: true,\n        component: lazy(() => import('views/Error401'))\n      },\n      {\n        path: '/errors/error-404',\n        exact: true,\n        component: lazy(() => import('views/Error404'))\n      },\n      {\n        path: '/errors/error-500',\n        exact: true,\n        component: lazy(() => import('views/Error500'))\n      },\n      {\n        component: () => <Redirect to=\"/errors/error-404\" />\n      }\n    ]\n  },\n  {\n    route: '*',\n    component: DashboardLayout,\n    routes: [\n      {\n        path: '/home',\n        exact: true,\n        component: lazy(() => import('views/CustomerManagementList'))\n      },\n      {\n        path: '/temporada/:tv/:numero',\n        exact: true,\n        component: lazy(() => import('views/Temporada'))\n      },\n      {\n        path: '/episodio/:id',\n        exact: true,\n        component: lazy(() => import('views/Episodio'))\n      },\n      {\n        path: '/personaje/:name',\n        exact: true,\n        component: lazy(() => import('views/Profile'))\n      },\n      {\n        path: '/busqueda/:name',\n        exact: true,\n        component: lazy(() => import('views/Search'))\n      },\n      \n      {\n        component: () => <Redirect to=\"/errors/error-404\" />\n      }\n    ]\n  }\n];\n\nexport default routes;\n","import { Chart } from 'react-chartjs-2';\n\n// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw() {\n  const { ctx } = this._chart;\n  const vm = this._view;\n  let { borderWidth } = vm;\n\n  let left;\n  let right;\n  let top;\n  let bottom;\n  let signX;\n  let signY;\n  let borderSkipped;\n  let radius;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let { cornerRadius } = this._chart.config.options;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n\n  if (typeof cornerRadius === 'undefined') {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    const halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    const borderLeft =\n      left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n    const borderRight =\n      right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n    const borderBottom =\n      bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i += 1) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    const width = corners[2][0] - corners[1][0];\n    const height = corners[0][1] - corners[1][1];\n    const x = corners[1][0];\n    const y = corners[1][1];\n\n    radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      const xTl = x;\n      const xTr = x + width;\n      const yTl = y + height;\n      const yTr = y + height;\n\n      const xBl = x;\n      const xBr = x + width;\n      const yBl = y;\n      const yBr = y;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      const xTl = x + width;\n      const xTr = x;\n      const yTl = y;\n      const yTr = y;\n\n      const xBl = x + width;\n      const xBr = x;\n      const yBl = y + height;\n      const yBr = y + height;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n}\n\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\n  draw\n});\n","import moment from 'moment';\n\nmoment.updateLocale('en', {\n  relativeTime: {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'seconds',\n    ss: '%ss',\n    m: '1m',\n    mm: '%dm',\n    h: '1h',\n    hh: '%dh',\n    d: '1d',\n    dd: '%dd',\n    M: '1M',\n    MM: '%dM',\n    y: '1Y',\n    yy: '%dY'\n  }\n});\n","import validate from 'validate.js';\n\nconst regex = (value, options) => {\n  const regExp = new RegExp(options.pattern);\n\n  if (!regExp.test(value)) {\n    return options.message;\n  }\n};\n\nconst checked = (value, options) => {\n  if (value !== true) {\n    return options.message || 'must be checked';\n  }\n};\n\nvalidate.validators = {\n  ...validate.validators,\n  regex,\n  checked\n};\n","import AxiosMockAdapter from 'axios-mock-adapter';\n\nimport axios from './axios';\n\nconst instance = new AxiosMockAdapter(axios, { delayResponse: 0 });\n\nexport default instance;\n","import uuid from 'uuid/v1';\nimport moment from 'moment';\n\nimport mock from 'utils/mock';\n\nmock.onGet('/api/management/seasonsBCS').reply(200, {\n  seasonsBCS: [\n    {\n      id: uuid(),\n      name: 'Temporada 1',\n      numero: 1,\n      tv: 'Better+Call+Saul'\n    },\n    {\n      id: uuid(),\n      name: 'Temporada 2',\n      numero: 2,\n      tv: 'Better+Call+Saul'\n    },\n    {\n      id: uuid(),\n      name: 'Temporada 3',\n      numero: 3,\n      tv: 'Better+Call+Saul'\n    },\n    {\n      id: uuid(),\n      name: 'Temporada 4',\n      numero: 4,\n      tv: 'Better+Call+Saul'\n    }\n  ]\n});\nmock.onGet('/api/management/seasonsBB').reply(200, {\n  seasonsBB: [\n    {\n      id: uuid(),\n      name: 'Temporada 1',\n      numero: 1,\n      tv: 'Breaking+Bad'\n    },\n    {\n      id: uuid(),\n      name: 'Temporada 2',\n      numero: 2,\n      tv: 'Breaking+Bad'\n    },\n    {\n      id: uuid(),\n      name: 'Temporada 3',\n      numero: 3,\n      tv: 'Breaking+Bad'\n    },\n    {\n      id: uuid(),\n      name: 'Temporada 4',\n      numero: 4,\n      tv: 'Breaking+Bad'\n    },\n    {\n      id: uuid(),\n      name: 'Temporada 5',\n      numero: 5,\n      tv: 'Breaking+Bad'\n    }\n  ]\n});\n\nmock.onGet('/api/management/customers/1/summary').reply(200, {\n  summary: {\n    name: 'Ekaterina Tankova',\n    email: 'ekaterina@devias.io',\n    phone: '+55 748 327 439',\n    state: 'Alabama',\n    country: 'United States',\n    zipCode: '240355',\n    address1: 'Street John Wick, no. 7',\n    address2: 'House #25',\n    iban: '4142 **** **** **** ****',\n    autoCC: false,\n    verified: true,\n    currency: '$',\n    invoices: [\n      {\n        id: uuid(),\n        type: 'paid',\n        value: 10.0\n      },\n      {\n        id: uuid(),\n        type: 'paid',\n        value: 15.0\n      },\n      {\n        id: uuid(),\n        type: 'due',\n        value: 5\n      },\n      {\n        id: uuid(),\n        type: 'income',\n        value: 10.0\n      }\n    ],\n    vat: 19,\n    balance: 0,\n    emails: [\n      {\n        id: uuid(),\n        description: 'Order confirmation',\n        created_at: moment()\n          .subtract(3, 'days')\n          .subtract(5, 'hours')\n          .subtract(34, 'minutes')\n      },\n      {\n        id: uuid(),\n        description: 'Order confirmation',\n        created_at: moment()\n          .subtract(4, 'days')\n          .subtract(11, 'hours')\n          .subtract(49, 'minutes')\n      }\n    ]\n  }\n});\n\nmock.onGet('/api/management/customers/1/invoices').reply(200, {\n  invoices: [\n    {\n      id: uuid(),\n      date: moment(),\n      description: 'Freelancer Subscription (12/05/2019 - 11/06/2019)',\n      paymentMethod: 'Credit Card',\n      value: '5.25',\n      currency: '$',\n      status: 'paid'\n    },\n    {\n      id: uuid(),\n      date: moment(),\n      description: 'Freelancer Subscription (12/05/2019 - 11/06/2019)',\n      paymentMethod: 'Credit Card',\n      value: '5.25',\n      currency: '$',\n      status: 'paid'\n    }\n  ]\n});\n\nmock.onGet('/api/management/customers/1/logs').reply(200, {\n  logs: [\n    {\n      id: uuid(),\n      status: 200,\n      method: 'POST',\n      route: '/api/purchase',\n      desc: 'Purchase',\n      IP: '84.234.243.42',\n      created_at: moment()\n        .subtract(2, 'days')\n        .subtract(2, 'minutes')\n        .subtract(56, 'seconds')\n    },\n    {\n      id: uuid(),\n      status: 522,\n      error: 'Invalid credit card',\n      method: 'POST',\n      route: '/api/purchase',\n      desc: 'Purchase',\n      IP: '84.234.243.42',\n      created_at: moment()\n        .subtract(2, 'days')\n        .subtract(2, 'minutes')\n        .subtract(56, 'seconds')\n    },\n    {\n      id: uuid(),\n      status: 200,\n      method: 'DELETE',\n      route: '/api/products/d65654e/remove',\n      desc: 'Cart remove',\n      IP: '84.234.243.42',\n      created_at: moment()\n        .subtract(2, 'days')\n        .subtract(8, 'minutes')\n        .subtract(23, 'seconds')\n    },\n    {\n      id: uuid(),\n      status: 200,\n      method: 'GET',\n      route: '/api/products/d65654e/add',\n      desc: 'Cart add',\n      IP: '84.234.243.42',\n      created_at: moment()\n        .subtract(2, 'days')\n        .subtract(20, 'minutes')\n        .subtract(54, 'seconds')\n    },\n    {\n      id: uuid(),\n      status: 200,\n      method: 'GET',\n      route: '/api/products/c85727f/add',\n      desc: 'Cart add',\n      IP: '84.234.243.42',\n      created_at: moment()\n        .subtract(2, 'days')\n        .subtract(34, 'minutes')\n        .subtract(16, 'seconds')\n    },\n    {\n      id: uuid(),\n      status: 200,\n      method: 'GET',\n      route: '/api/products/c85727f',\n      desc: 'View product',\n      IP: '84.234.243.42',\n      created_at: moment()\n        .subtract(2, 'days')\n        .subtract(54, 'minutes')\n        .subtract(30, 'seconds')\n    },\n    {\n      id: uuid(),\n      status: 200,\n      method: 'GET',\n      route: '/api/products',\n      desc: 'Get products',\n      IP: '84.234.243.42',\n      created_at: moment()\n        .subtract(2, 'days')\n        .subtract(56, 'minutes')\n        .subtract(40, 'seconds')\n    },\n    {\n      id: uuid(),\n      status: 200,\n      method: 'POST',\n      route: '/api/login',\n      desc: 'Login',\n      IP: '84.234.243.42',\n      created_at: moment()\n        .subtract(2, 'days')\n        .subtract(57, 'minutes')\n        .subtract(5, 'seconds')\n    }\n  ]\n});\n","import React from 'react';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport MomentUtils from '@date-io/moment';\nimport { Provider as StoreProvider } from 'react-redux';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { renderRoutes } from 'react-router-config';\n\nimport theme from './theme';\nimport { configureStore } from './store';\nimport routes from './routes';\nimport './mixins/chartjs';\nimport './mixins/moment';\nimport './mixins/validate';\nimport './mixins/prismjs';\nimport './mock';\nimport './assets/scss/index.scss';\n\nconst history = createBrowserHistory();\nconst store = configureStore();\n\nconst App = () => {\n  return (\n    <StoreProvider store={store}>\n      <ThemeProvider theme={theme}>\n        <MuiPickersUtilsProvider utils={MomentUtils}>\n          <Router history={history}>\n            {renderRoutes(routes)}\n          </Router>\n        </MuiPickersUtilsProvider>\n      </ThemeProvider>\n    </StoreProvider>\n  );\n};\n\nexport default App;\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n// import { createLogger } from 'redux-logger';\n\nimport rootReducer from 'reducers';\n\n// const loggerMiddleware = createLogger();\n\nexport default function configureStore(preloadedState = {}) {\n  const middlewares = [thunkMiddleware]; // loggerMiddleware\n  const middlewareEnhancer = composeWithDevTools(\n    applyMiddleware(...middlewares)\n  );\n\n  const enhancers = [middlewareEnhancer];\n  const composedEnhancers = compose(...enhancers);\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers);\n\n  return store;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in projection, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'projection' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}