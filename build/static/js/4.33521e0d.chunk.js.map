{"version":3,"sources":["../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","../node_modules/@material-ui/core/esm/Table/TableContext.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableRow/TableRow.js","../node_modules/@material-ui/core/esm/TableCell/TableCell.js","../node_modules/@material-ui/core/esm/TableBody/TableBody.js","views/CustomerManagementList/components/Header/Header.js","views/CustomerManagementList/components/Results/Results.js","views/CustomerManagementList/CustomerManagementList.js"],"names":["Tablelvl2Context","React","TableContext","tablelvl2","variant","TableHead","props","ref","classes","className","_props$component","component","Component","other","_objectWithoutProperties","Provider","value","_extends","clsx","root","role","withStyles","display","name","Table","_props$padding","padding","_props$size","size","_props$stickyHeader","stickyHeader","table","theme","width","borderCollapse","borderSpacing","typography","body2","spacing","color","palette","text","secondary","textAlign","captionSide","TableRow","_props$hover","hover","_props$selected","selected","head","footer","verticalAlign","outline","backgroundColor","action","fade","main","selectedOpacity","TableCell","_props$align","align","paddingProp","scopeProp","scope","sizeProp","sortDirection","variantProp","isHeadCell","ariaSort","concat","capitalize","borderBottom","type","lighten","divider","darken","primary","lineHeight","pxToRem","fontWeight","fontWeightMedium","body","fontSize","sizeSmall","paddingRight","paddingLeft","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","flexDirection","alignJustify","position","top","left","zIndex","background","default","TableBody","makeStyles","useStyles","content","inner","minWidth","nameCell","alignItems","avatar","height","marginRight","actions","justifyContent","Results","seasons","title","rest","Typography","gutterBottom","Card","CardHeader","Divider","CardContent","map","season","key","id","Link","RouterLink","to","tv","numero","defaultProps","results","marginTop","CustomerManagementList","useState","seasonsBCS","setSeasonsBCS","seasonsBB","setSeasonsBB","useEffect","mounted","console","log","axios","get","then","response","data","Grid","container","item","lg","md","xl","xs"],"mappings":"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","file":"static/js/4.33521e0d.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = /*#__PURE__*/React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends({}, theme.typography.body2, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar defaultComponent = 'table';\nvar Table = /*#__PURE__*/React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: table\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    role: Component === defaultComponent ? null : 'table',\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      '&$hover:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\nvar defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = /*#__PURE__*/React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      'head': classes.head,\n      'footer': classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected),\n    role: Component === defaultComponent ? null : 'row'\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, fade, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = /*#__PURE__*/React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  var role;\n  var Component;\n\n  if (component) {\n    Component = component;\n    role = isHeadCell ? 'columnheader' : 'cell';\n  } else {\n    Component = isHeadCell ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'default');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'default' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], variant === 'head' && table && table.stickyHeader && classes.stickyHeader),\n    \"aria-sort\": ariaSort,\n    role: role,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value (`default`).\n   */\n  padding: PropTypes.oneOf(['checkbox', 'default', 'none']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`medium`).\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar defaultComponent = 'tbody';\nvar TableBody = /*#__PURE__*/React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Customers\n          </Typography>\n        </Grid>\n        \n      </Grid>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  Button,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\n\nimport getInitials from 'utils/getInitials';\nimport { ReviewStars, GenericMoreButton, TableEditBar } from 'components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  },\n  nameCell: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, seasons, title, ...rest } = props;\n\n  const classes = useStyles();\n\n\n\n \n\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        \n      </Typography>\n      <Card>\n        <CardHeader\n          title={title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell align=\"center\">Temporadas</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {seasons.map(season => (\n                    <TableRow\n                      hover\n                      key={season.id}\n                    >\n                      \n                      <TableCell>\n                        <div className={classes.nameCell}>\n                          \n                          <div>\n                            <Link\n                              color=\"inherit\"\n                              component={RouterLink}\n                              to={\"/temporada/\"+season.tv+\"/\"+season.numero+\"/\"}\n                              variant=\"h6\"\n                            >\n                              {season.name}\n                            </Link>\n                          </div>\n                        </div>\n                      </TableCell>\n                      \n                      \n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  sasons: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  seasons: []\n};\n\nexport default Results;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport clsx from 'clsx';\nimport axios from 'utils/axios';\nimport { Grid , Button} from '@material-ui/core';\nimport { Page, SearchBar } from 'components';\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst CustomerManagementList = props => {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n  const [seasonsBCS, setSeasonsBCS] = useState([]);\n  const [seasonsBB, setSeasonsBB] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchSeasons = () => {\n      axios.get('/api/management/seasonsBCS').then(response => {\n        if (mounted) {\n          setSeasonsBCS(response.data.seasonsBCS);\n        }\n      });\n      axios.get('/api/management/seasonsBB').then(response => {\n        if (mounted) {\n          setSeasonsBB(response.data.seasonsBB);\n        }\n      });\n    };\n    console.log('hola')\n    fetchSeasons();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const handleVolverAtras = () => {\n    window.history.back()\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Home\"\n    >\n      \n      <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={2}\n    >\n      <Grid\n        item\n        lg={6}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n      {seasonsBB && (\n        <Results\n          className={classes.results}\n          seasons={seasonsBB}\n          title={'Breaking Bad'}\n        />\n      )}\n      </Grid>\n      <Grid\n        item\n        lg={6}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n      {seasonsBCS && (\n        <Results\n          className={classes.results}\n          seasons={seasonsBCS}\n          title={'Better Call Saul'}\n        />\n      )}\n      </Grid>\n      </Grid>\n    </Page>\n  );\n};\n\nexport default CustomerManagementList;\n"],"sourceRoot":""}